/*! openleg - v - 2016-02-26 */function mismatchViewDirective($rootScope,$mdDialog,defaultFilter,IgnoreApi,TrackingApi,ignoreStatuses){return{scope:{mismatches:"=",summary:"=",filter:"=?",loading:"@"},restrict:"E",templateUrl:ctxPath+"/partial/report/spotcheck-mismatch-view",link:function($scope,$element,$attrs){function onSummaryChange(){$scope.summary&&(updateFilter(),setTotal())}function updateFilter(){ensureProperties($scope.summary.mismatchStatuses,$scope.filter.statuses,!0),ensureProperties($scope.summary.mismatchCounts,$scope.filter.types,!0),updateOptions(),$scope.state.filterLoaded=!0}function updateOptions(){$scope.state.statusOptions=defaultOptions.concat(Object.keys($scope.summary.mismatchStatuses)),$scope.state.typeOptions=defaultOptions.concat(Object.keys($scope.summary.mismatchCounts))}function setTotal(){$scope.total=0,angular.forEach($scope.summary.mismatchStatuses,function(count){$scope.total+=count})}var defaultOptions=["all"];$scope.showStatusFilter=!$attrs.hasOwnProperty("noStatusFilter"),$scope.ctxPath=ctxPath,$scope.state={allStatuses:!0,allTypes:!0,total:0,ignoreFilter:0,trackingFilter:3,filterLoaded:!1,iSelectedStatus:0,iSelectedType:0,selectedStatus:"all",selectedType:"all",statusOptions:angular.extend(defaultOptions),typeOptions:angular.extend(defaultOptions),currentPage:1,settingIssueId:!1,settingIgnoreStatus:!1,requestError:!1},$scope.filter=$scope.filter||angular.merge({},defaultFilter),$scope.orderByLabels=orderByLabels,$scope.sortOrderLabels={ASC:"Ascending",DESC:"Descending"},$scope.ignoreStatuses=ignoreStatuses,$scope.setIgnoreStatus=function(mismatchRow,ignoreStatus){var mismatch=mismatchRow.mismatch;$scope.state.settingIgnoreStatus=!0,console.log("setting ignore status",mismatchRow,ignoreStatus),IgnoreApi.save({mismatchId:mismatch.mismatchId,ignoreLevel:ignoreStatus},function(response){if("NOT_IGNORED"!==mismatch.ignoreStatus){var ignoreStatusIndex=mismatchRow.chips.indexOf(mismatch.ignoreStatus);ignoreStatusIndex>=0&&mismatchRow.chips.splice(ignoreStatusIndex,1)}"NOT_IGNORED"!==ignoreStatus&&mismatchRow.chips.unshift(ignoreStatus),mismatch.ignoreStatus=ignoreStatus,$scope.state.settingIgnoreStatus=!1},function(errorResponse){$scope.state.settingIgnoreStatus=!1,$scope.state.requestError=!0,console.error("error setting ignore status",mismatchRow,ignoreStatus,errorResponse)})},$scope.addIssueId=function(mismatchRow){var mismatch=mismatchRow.mismatch,newIssueId=mismatchRow.newIssueId;console.log("adding issue id",mismatchRow,newIssueId);for(var issueId in mismatch.issueIds.items)if(issueId===newIssueId)return void console.log("mismatch already has issue id",mismatchRow,newIssueId);$scope.state.settingIssueId=!0,TrackingApi.save({mismatchId:mismatch.mismatchId,issueId:newIssueId},function(response){$scope.state.settingIssueId=!1,mismatchRow.chips.push(newIssueId),mismatch.issueIds.items.push(newIssueId),mismatchRow.newIssueId=""},function(errorResponse){$scope.state.settingIssueId=!1,$scope.state.requestError=!0,console.error("error adding issue id",mismatchRow,newIssueId,errorResponse)})},$scope.removeIssueIdPrompt=function(mismatchRow,remIssueId){$scope.state.settingIssueId||mismatchRow.mismatch.issueIds.items.indexOf(remIssueId)<0||$mdDialog.show($mdDialog.confirm().title("Remove Issue").textContent("Do you wish to remove issue id #"+remIssueId+"?").ok("Yes").cancel("No")).then(function(){$scope.removeIssueId(mismatchRow,remIssueId)})},$scope.removeIssueId=function(mismatchRow,remIssueId){var mismatch=mismatchRow.mismatch;console.log("removing issue id",mismatchRow,remIssueId),$scope.state.settingIssueId=!0,TrackingApi["delete"]({mismatchId:mismatch.mismatchId,issueId:remIssueId},function(response){$scope.state.settingIssueId=!1;var chipIndex=mismatchRow.chips.indexOf(remIssueId);chipIndex>=0&&mismatchRow.chips.splice(chipIndex,1);var issueIdIndex=mismatch.issueIds.items.indexOf(remIssueId);issueIdIndex>=0&&mismatch.issueIds.items.splice(issueIdIndex,1)},function(errorResponse){$scope.state.settingIssueId=!1,$scope.state.requestError=!0,console.error("error removing issue id",mismatchRow,newIssueId,errorResponse)})},$scope.getIssueUrl=function(issueId){var issueIdPlaceholder="${issueId}",issueUrlTemplate="http://dev.nysenate.gov/issues/"+issueIdPlaceholder;return issueUrlTemplate.replace(issueIdPlaceholder,issueId)},$scope.getTypeCount=function(type,ignored){var typeCounts=$scope.summary.mismatchCounts[type];if(!typeCounts)return"?!";var typeCount=0;return angular.forEach(typeCounts,function(ignoreStatuses,status){angular.forEach(ignoreStatuses,function(trackedStatuses,ignoreStatus){angular.forEach(trackedStatuses,function(count,trackedStatus){$scope.filter.passes(status,!0,ignoreStatus,trackedStatus)&&(typeCount+=count)})})}),typeCount},$scope.passes=function(mismatch){return $scope.filter.passes(mismatch)},$scope.isLoading=function(){return"true"===$attrs.loading},$scope.$watch("state.currentPage",function(){var offset=($scope.state.currentPage-1)*$scope.filter.limit+1;console.log("new page",$scope.state.currentPage,"limit",$scope.filter.limit,"offset",offset),offset!==$scope.filter.offset&&($scope.filter.offset=offset,$scope.onFilterChange(!0))}),$scope.$watch("summary",onSummaryChange,!0),$scope.onStatusChange=function(){console.log("selected new status:",$scope.state.selectedStatus);var status=$scope.state.selectedStatus;setAllProperties($scope.filter.statuses,"all"===status),$scope.filter.statuses.hasOwnProperty(status)&&($scope.filter.statuses[status]=!0),$scope.onFilterChange()},$scope.onTypeChange=function(){console.log("selected new type:",$scope.state.selectedType);var type=$scope.state.selectedType;setAllProperties($scope.filter.types,"all"===type),$scope.filter.types.hasOwnProperty(type)&&($scope.filter.types[type]=!0),$scope.onFilterChange()},$scope.ignoreFilterOptions=["Hide Ignored","Show Ignored","unused","Show Only Ignored"],$scope.onIgnoreChange=function(){var ignoredShownMask=1,ignoredOnlyMask=2;$scope.filter.ignoredShown=(ignoredShownMask&$scope.state.ignoreFilter)>0,$scope.filter.ignoredOnly=(ignoredOnlyMask&$scope.state.ignoreFilter)>0,$scope.onFilterChange()},$scope.trackingFilterOptions=["unused","Show Tracked","Show Untracked","Show All"],$scope.onTrackingChange=function(){var trackedShownMask=1,untrackedShownMask=2;$scope.filter.trackedShown=(trackedShownMask&$scope.state.trackingFilter)>0,$scope.filter.untrackedShown=(untrackedShownMask&$scope.state.trackingFilter)>0,$scope.onFilterChange()},$scope.onFilterChange=function(offsetChanged){offsetChanged||($scope.filter.offset=1,$scope.state.currentPage=1),console.log("filter changed",$scope.filter),$rootScope.$emit("mismatchFilterChange")},$scope.showDetailedDiff=function(mismatchRow){console.log("wtf"),$mdDialog.show({templateUrl:"mismatchDetailWindow",controller:"detailDialogCtrl",locals:{mismatchRow:mismatchRow}})}}}}function orderByLabelFilter(){return function(orderBy){return orderByLabels.hasOwnProperty(orderBy)?orderByLabels[orderBy]:"Order By!?"}}function extractIgnoreTrackFilter(filter){var simpleFilter={};return filter.ignoredOnly?simpleFilter.ignored=!0:filter.ignoredShown||(simpleFilter.ignored=!1),filter.trackedShown?filter.untrackedShown||(simpleFilter.tracked=!0):simpleFilter.tracked=!1,simpleFilter}function statusSelectLabelFilter($filter){return function(status,summary,filter){var simpleFilter=extractIgnoreTrackFilter(filter);simpleFilter.status=status;var count=$filter("mismatchCount")(summary,simpleFilter);return $filter("mismatchStatusLabel")(status)+" ("+count+")"}}function typeSelectLabelFilter($filter){return function(type,summary,filter,status){var simpleFilter=extractIgnoreTrackFilter(filter);simpleFilter.type=type,simpleFilter.status=status;var count=$filter("mismatchCount")(summary,simpleFilter);return $filter("mismatchTypeLabel")(type)+" ("+count+")"}}function ensureProperties(model,copycat,defaultVal){var desiredType=typeof defaultVal;for(var copycatProp in copycat)copycat.hasOwnProperty(copycatProp)&&(!model.hasOwnProperty(copycatProp)||"undefined"!==desiredType&&typeof copycat[copycatProp]!==desiredType)&&delete copycat[copycatProp];for(var modelProp in model)model.hasOwnProperty(modelProp)&&!copycat.hasOwnProperty(modelProp)&&(copycat[modelProp]="undefined"!==desiredType?defaultVal:model[modelProp])}function setAllProperties(obj,value){for(var prop in obj)obj.hasOwnProperty(prop)&&(obj[prop]=value)}function openSummaryCtrl($scope,$filter,openSummaryApi){function getSummaries(){$scope.loadingSummaries=!0,openSummaryApi.get({},function(response){$scope.summaries=response.result.summaryMap,$scope.loadingSummaries=!1},function(errorResponse){$scope.loadingSummaries=!1,$scope.summaryRequestError=!0})}$scope.summaries={},$scope.init=function(){$scope.setHeaderText("Summary of Open Mismatches"),getSummaries()}}var openApp=angular.module("open",["ngRoute","ngResource","ngMaterial","smart-table","ui.calendar","angularUtils.directives.dirPagination","diff-match-patch","ngAnimate","open.bill","open.agenda","open.law","open.calendar","open.spotcheck","open.transcript","open.admin"]);openApp.config(function($mdThemingProvider){var primaryPalette=$mdThemingProvider.extendPalette("grey",{500:"#f1f1f1",300:"#eee",800:"#444",A100:"#fff",contrastDefaultColor:"dark"}),accentPalette=$mdThemingProvider.extendPalette("blue",{A200:"#008cba",A100:"#165b81",A400:"#2b6a90",contrastLightColors:["A200","A100","A400","A700"]});$mdThemingProvider.definePalette("primaryPalette",primaryPalette),$mdThemingProvider.definePalette("bluePalette",accentPalette),$mdThemingProvider.theme("default").primaryPalette("primaryPalette").accentPalette("bluePalette")}).constant("$mdGesture",{}).config(function($resourceProvider){$resourceProvider.defaults.stripTrailingSlashes=!1}).config(function(paginationTemplateProvider){paginationTemplateProvider.setPath(ctxPath+"/static/tpl/dirPagination.tpl.html")}),openApp.controller("AppCtrl",["$scope","$location","$mdSidenav","$mdDialog","$http","$interval","$window","BillUtils",function($scope,$location,$mdSidenav,$mdDialog,$http,$interval,$window){$scope.header={text:"",visible:!1},$scope.activeSession=2015,$scope.ctxPath=ctxPath,$scope.toggleLeftNav=function(){$mdSidenav("left").toggle()},$scope.setHeaderText=function(text){$scope.header.text=text},$scope.setHeaderVisible=function(visible){$scope.header.visible=visible},$scope.log=function(stuff){console.log(stuff)},$scope.keys=function(obj){return Object.keys(obj)},$scope.go=function(url){$location.url(url)},$scope.goNewTab=function(url){console.log("hello"),console.log("opening",url,"in new tab"),$window.open(url,"_blank")},$scope.toZonelessISOString=function(momentDate){return momentDate.format("YYYY-MM-DDTHH:mm:ss.SSS")},$scope.setSearchParam=function(paramName,paramValue,condition){$location.search(paramName,condition!==!1?paramValue:null).replace()},$scope.clearSearchParams=function(){$location.search({})},$scope.invalidParamDialog=function(response){if(400===response.status&&1===response.data.errorCode){var errorData=response.data.errorData,paramName=errorData.parameterConstraint.name;$mdDialog.show($mdDialog.alert().title("Invalid Parameter: "+paramName).content("Value '"+errorData.receivedValue+"' is not a valid for request parameter "+paramName).ok("OK"))}},$scope.notImplementedDialog=function(){$mdDialog.show($mdDialog.confirm().title("Not Yet Implemented").content("Coming Soon!").ariaLabel("Feature Not Yet Implemented").theme("md-primary").ok("Can't Wait!!").cancel("I can wait"))}}]);var coreModule=angular.module("open.core",[]);coreModule.filter("default",["$filter",function($filter){return function(input,defaultVal){return input?input:defaultVal}}]),coreModule.filter("moment",["$filter",function($filter){return function(input,format,defaultVal){return input?moment(input).format(format):"undefined"!=typeof defaultVal?defaultVal:"--"}}]),coreModule.filter("sessionYear",["$filter",function($filter){return function(year){return year%2===0?year-1:year}}]),coreModule.filter("label",function(){return function(item,labelMap){return item in labelMap?labelMap[item]:item}}),coreModule.filter("ordinalSuffix",["$filter",function($filter){var suffixes=["th","st","nd","rd"];return function(input){if("number"==typeof input&&input%1===0){var relevantDigits=20>input?input%20:input%10;return input.toString().concat(3>=relevantDigits?suffixes[relevantDigits]:suffixes[0])}return"D:"}}]),coreModule.filter("toDictionaryArray",function(){return function(obj){if(!(obj instanceof Object))return obj;var arr=[];for(var key in obj)arr.push({key:key,value:obj[key]});return arr}}),coreModule.filter("unCamelCase",function(){return function(str){return str.split(/(?=[A-Z])/).map(function(word){return word.toLowerCase()}).join(" ")}}),coreModule.filter("titleCaps",function(){return function(str){return str.replace(/\w\S*/g,function(word){return word.charAt(0).toUpperCase()+word.substring(1).toLowerCase()})}}),coreModule.factory("YearGenerator",function(){return{getSingleYearsInt:function(start,end){var years=[];end||(end=(new Date).getFullYear());for(var year=start;end>=year;year++)years.push(year);return years},getSessionYearsInt:function(start,end){var years=this.getSingleYearsInt(start,end);return years.filter(function(y){return y%2!=0})},getSingleYearsStr:function(start,end){var years=this.getSingleYearsInt(start,end);return years.map(function(y){return String(y)})}}}),coreModule.factory("PaginationModel",function(){return{firstPage:1,currPage:1,lastPage:1,itemsPerPage:6,totalItems:0,setTotalItems:function(totalResults){this.totalItems=totalResults,this.lastPage=Math.ceil(this.totalItems/this.itemsPerPage),this.currPage>this.lastPage&&(this.currPage=1)},reset:function(){this.currPage=1},needsPagination:function(){return this.totalItems>this.itemsPerPage},getOffset:function(){return this.itemsPerPage*(this.currPage-1)+1},getLimit:function(){return this.itemsPerPage},nextPage:function(){this.currPage+=1},hasNextPage:function(){return this.currPage<this.lastPage},prevPage:function(){this.currPage=Math.max(this.currPage-1,0)},hasPrevPage:function(){return this.currPage>this.firstPage},toLastPage:function(){this.currPage=this.lastPage},toFirstPage:function(){this.currPage=this.firstPage}}}),coreModule.filter("default",["$filter",function($filter){return function(input,defaultVal){return input?input:defaultVal}}]),coreModule.filter("moment",["$filter",function($filter){return function(input,format,defaultVal){return input?moment(input).format(format):"undefined"!=typeof defaultVal?defaultVal:"--"}}]),coreModule.filter("ordinalSuffix",["$filter",function($filter){var suffixes=["th","st","nd","rd"];return function(input){if("number"==typeof input&&input%1===0){var relevantDigits=20>input?input%20:input%10;return input.toString().concat(3>=relevantDigits?suffixes[relevantDigits]:suffixes[0])}return"D:"}}]),coreModule.factory("sessionYears",[function(){function generateSessionYears(){for(var years=[],year=2009;year<=(new Date).getFullYear();year+=2)years.push(year);return years}return generateSessionYears()}]),coreModule.directive("checkButton",function(){return{restrict:"E",scope:{btnclass:"@btnClass",btnmodel:"=ngModel"},transclude:!0,template:"<button type='button' class='check-button {{btnclass}}' ng-class='{success: btnmodel, disabled: !btnmodel }' btn-checkbox ng-model='btnmodel' ng-transclude></button>"}}),coreModule.directive("stPaginationInput",function(){return{restrict:"E",template:'<input type="number" class="select-page" min="1" max="{{numPages}}"ng-model="inputPage" ng-change="selectPage(inputPage)" ng-model-options="{debounce:100}">',link:function(scope,element,attrs){scope.$watch("currentPage",function(c){scope.inputPage=c})}}}),coreModule.factory("safeHighlights",["$sce",function($sce){return function(results){angular.forEach(results,function(r){if(r.hasOwnProperty("highlights"))for(var prop in r.highlights)for(var highlightCount=r.highlights[prop].length||0,i=0;highlightCount>i;i++)r.highlights[prop][i]&&(r.highlights[prop][i]=$sce.trustAsHtml(String(r.highlights[prop][i]).replace(/\\n/g," ... ")))})}}]),coreModule.directive("updateList",["PaginationModel",function(PaginationModel){return{restrict:"E",scope:{updateResponse:"=",pagination:"=?",showId:"=?",showDetails:"=?",fromDate:"=?",toDate:"=?"},templateUrl:ctxPath+"/partial/core/update-list",link:function($scope,$elem,$attrs){$scope.showId=$scope.showId||!0,$scope.showDetails=$scope.showDetails!==!1,$scope.pagination||($scope.paginationModel=angular.extend({},PaginationModel),$scope.paginationModel.itemsPerPage=Number.MAX_SAFE_INTEGER)}}}]),coreModule.filter("updateId",function(){return function(update){var contentType=update.contentType,id=update.id,idString="";if("CALENDAR"===contentType){if(idString="Calendar "+id.calendarNumber+" ("+id.year+")","fields"in update)if("supVersion"in update.fields){var supVersion=update.fields.supVersion;idString+="-"+(""==supVersion?"floor":supVersion)}else"sequenceNo"in update.fields&&(idString+="-"+update.fields.sequenceNo)}else"AGENDA"===contentType?idString="Agenda "+id.number+" ("+id.year+")":"LAW"===contentType?idString=id.lawId+" ("+id.locationId+")":"BILL"===contentType&&(idString=id.basePrintNo+"-"+id.session);return idString}}),coreModule.directive("errSrc",function(){return{restrict:"A",link:function(scope,element,attrs){element.bind("error",function(){attrs.src!=attrs.errSrc&&attrs.$set("src",attrs.errSrc)})}}}),coreModule.directive("lineNumbers",function(){return{restrict:"E",scope:{lineStart:"=?",lineEnd:"=?",source:"=?"},replace:!0,transclude:!0,template:"<span class='line-numbers'><span ng-repeat='i in range(lineEnd-lineStart + 1) track by $index'>{{$index + lineStart}}</span></span>",link:function($scope){$scope.lineStart=$scope.lineStart||1,$scope.lineEnd||($scope.source&&"string"==typeof $scope.source?$scope.lineEnd=$scope.source.split("\n").length:$scope.lineEnd=0),$scope.range=function(num){return new Array(num)}}}}),coreModule.directive("togglePanel",[function(){return{restrict:"E",scope:{label:"@",extraClasses:"@",callback:"=",renderClosed:"@"},replace:!0,transclude:!0,template:'<md-card class="toggle-panel {{extraClasses}}" ng-class="{\'open\': open}">   <md-card-content class="toggle-panel-bar" ng-click="toggle()">       <div>           <a class="toggle-panel-label">{{label}}</a>           <span flex></span>           <i ng-class="{\'icon-chevron-up\': open, \'icon-chevron-down\': !open}" style="float: right"></i>           <span class="text-xsmall margin-right-20" ng-show="showTip && !open" style="float: right">               (Click to expand section)</span>       </div>   </md-card-content>   <md-card-content ng-if="opened || renderClosed" ng-show="open" class="panel-content" ng-cloak ng-transclude></md-card-content></md-card>',link:function($scope,$element,$attrs){$scope.opened=!1,$scope.toggle=function(){$scope.open=!$scope.open,$scope.callback&&$scope.callback($scope.open)},$scope.renderClosed="true"==$scope.renderClosed,$scope.$watch($attrs.open,function(open){$scope.open=open}),$scope.$watch($attrs.showTip,function(showTip){$scope.showTip=showTip}),$scope.$watch("open",function(newOpen,oldOpen){var panelElem=$element.children(".panel-content");newOpen?panelElem.slideDown(200):panelElem.slideUp(200),$scope.opened=newOpen||$scope.opened})}}}]),openApp.directive("materialMenu",["$compile","$rootScope","$mdSidenav","$log","$location","$timeout",function($compile,$rootScope,$mdSidenav,$log,$location,$timeout){return{scope:{},template:'<nav>  <div ng-repeat="section in menu.sections">    <a ng-class="{active: isSectionSelected(section)}" class="menu-item menu-title md-menu-item"       ng-click="selectSection(section)" tab-index="-1"> {{section.title}}    </a>    <div ng-if="section.items" ng-repeat="item in section.items">      <a ng-class="{active: isItemSelected(item)}" target="{{item.target}}"         class="menu-item menu-sub-item md-menu-item"          ng-show="isSectionSelected(section)" tab-index="-1"         ng-href="{{item.url}}">         <span><i ng-class="item.icon" class="prefix-icon2"></i><span ng-bind="item.title"></span></span>      </a>    </div>  </div></nav>',restrict:"E",replace:!0,controller:function($scope){function deselectMenu(itemsOnly){angular.forEach($scope.urlMap,function(s){itemsOnly?s.ref.active=!1:s.secRef.active=!1})}$scope.isSectionSelected=function(section){return section.active},$scope.isItemSelected=function(item){return item.active},$scope.selectSection=function(section){deselectMenu(!1),section.active=!0},$scope.selectItem=function(item){deselectMenu(!0),item.active=!0,$mdSidenav("left").close()},$rootScope.$on("$routeChangeSuccess",function(){$scope.urlMap.some(function(secItem){return secItem.re.test($location.url())?($scope.selectSection(secItem.secRef),$scope.selectItem(secItem.ref),!0):!1})})},compile:function($elem,attrs,transclude){return{pre:function(scope,$elem,attrs){scope.menu={sections:[]};var $sections=$($elem.context).children("menu-section");angular.forEach($sections,function(_s){var section={title:_s.title,items:[]};angular.forEach($(_s).children("menu-item"),function(_i){var item={url:$(_i).attr("url"),title:$(_i).text(),icon:$(_i).attr("icon"),target:$(_i).attr("target")};section.items.push(item)}),scope.menu.sections.push(section)}),scope.urlMap=[],angular.forEach(scope.menu.sections,function(section){angular.forEach(section.items,function(item){scope.urlMap.push({isSection:!1,url:item.url,re:new RegExp("^"+item.url),ref:item,secRef:section})})}),scope.urlMap.sort(function(a,b){return b.url.length-a.url.length})}}}}}]),coreModule.directive("checkButton",function(){return{restrict:"E",scope:{btnClass:"@",btnModel:"=ngModel",ariaLabel:"@"},transclude:!0,template:"<md-button class='check-butt md-default-theme {{btnClass}}' aria-label='{{ariaLabel}}'   ng-mouseenter='hover = true' ng-mouseleave='hover = false'   ng-class='{\"md-primary\": btnModel, \"md-raised\": btnModel || hover, \"md-background\": !btnModel }'    ng-click='toggle()'> <ng-transclude></ng-transclude></md-button>",controller:function($scope){$scope.toggle=function(){$scope.btnModel=!$scope.btnModel}}}}),coreModule.factory("BillUtils",[function(){return{getStatusDesc:function(status){var desc="";if(status)switch(status.statusType){case"IN_SENATE_COMM":desc="In Senate "+status.committeeName+" Committee";break;case"IN_ASSEMBLY_COMM":desc="In Assembly "+status.committeeName+" Committee";break;case"SENATE_FLOOR":desc="On Senate Floor as Calendar No: "+status.billCalNo;break;case"ASSEMBLY_FLOOR":desc="On Assembly Floor as Calendar No: "+status.billCalNo;break;default:desc=status.statusDesc}return desc}}}]),coreModule.directive("amChart",function(){return{restrict:"E",replace:!0,scope:{chartId:"@",chartClass:"@",chartConfig:"=",chartData:"="},template:'<div id="{{chartId}}" class="am-chart {{chartClass}}" style="min-width: 310px; height: 400px; margin: 0 auto"></div>',link:function(scope,element,attrs){console.log("hi"),scope.chartId||(scope.chartId="am-chart"),scope.chart=!1;var initChart=function(){scope.chart&&scope.chart.destroy(),scope.chartConfig.dataProvider=scope.chartData,console.log(scope.chartConfig),scope.chart=AmCharts.makeChart(scope.chartId,scope.chartConfig)};scope.$watch(scope.chartData,initChart,!0)}}}),angular.module("open").config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$routeProvider.when(ctxPath+"/bills",{templateUrl:ctxPath+"/partial/content/bill/bill-search",reloadOnSearch:!1}).when(ctxPath+"/bills/:session/:printNo",{templateUrl:ctxPath+"/partial/content/bill/bill-view",reloadOnSearch:!1}).when(ctxPath+"/agendas",{templateUrl:ctxPath+"/partial/content/agenda/agenda-search",reloadOnSearch:!1}).when(ctxPath+"/agendas/:year/:agendaNo",{templateUrl:ctxPath+"/partial/content/agenda/agenda-view",reloadOnSearch:!1}).when(ctxPath+"/agendas/:year/:agendaNo/:comm",{templateUrl:ctxPath+"/partial/content/agenda/agenda-view",reloadOnSearch:!1}).when(ctxPath+"/calendars",{templateUrl:ctxPath+"/partial/content/calendar/calendar-search",reloadOnSearch:!1}).when(ctxPath+"/calendars/:year/:calNo",{templateUrl:ctxPath+"/partial/content/calendar/calendar-view",reloadOnSearch:!1}).when(ctxPath+"/laws",{templateUrl:ctxPath+"/partial/content/law/law-search",reloadOnSearch:!1}).when(ctxPath+"/laws/:lawId",{templateUrl:ctxPath+"/partial/content/law/law-view",reloadOnSearch:!1}).when(ctxPath+"/members",{templateUrl:ctxPath+"/partial/content/member/member-search",reloadOnSearch:!1}).when(ctxPath+"/members/:sessionYear/:memberId",{templateUrl:ctxPath+"/partial/content/member/member-view",reloadOnSearch:!1}).when(ctxPath+"/transcripts",{templateUrl:ctxPath+"/partial/content/transcript/transcript-list",reloadOnSearch:!1}).when(ctxPath+"/transcripts/session/:filename/",{templateUrl:ctxPath+"/partial/content/transcript/session-transcript-view",reloadOnSearch:!1}).when(ctxPath+"/transcripts/hearing/:filename/",{templateUrl:ctxPath+"/partial/content/transcript/hearing-transcript-view"}).when(ctxPath+"/admin/report/spotcheck",{templateUrl:ctxPath+"/partial/report/spotcheck-summary",reloadOnSearch:!1}).when(ctxPath+"/admin/report/spotcheck/open",{templateUrl:ctxPath+"/partial/report/spotcheck-open-summary"}).when(ctxPath+"/admin/report/spotcheck/open/:reportType",{templateUrl:ctxPath+"/partial/report/spotcheck-mismatch",reloadOnSearch:!1}).when(ctxPath+"/admin/report/spotcheck/:type/:runTime",{templateUrl:ctxPath+"/partial/report/spotcheck-report",reloadOnSearch:!1}).when(ctxPath+"/admin",{templateUrl:ctxPath+"/partial/admin/dashboard",reloadOnSearch:!1}).when(ctxPath+"/admin/account",{templateUrl:ctxPath+"/partial/admin/account",reloadOnSearch:!1}).when(ctxPath+"/admin/logs",{templateUrl:ctxPath+"/partial/admin/logs",reloadOnSearch:!1}).when(ctxPath+"/admin/logout",{templateUrl:ctxPath+"/partial/admin/logout"}).when(ctxPath+"/docs",{redirectTo:ctxPath+"/docs"}).when(ctxPath+"/logout",{redirectTo:ctxPath+"/logout",reloadOnSearch:!0}).otherwise({redirectTo:ctxPath+"/bills"}),$locationProvider.html5Mode(!0),$locationProvider.hashPrefix("!")}]);var apiModule=angular.module("open.api",[]);apiModule.factory("BillListingApi",["$resource",function($resource){return $resource(apiPath+"/bills/:sessionYear?sort=:sort&limit=:limit&offset=:offset",{sessionYear:"@sessionYear",sort:"@sort",limit:"@limit",offset:"@offset"})}]),apiModule.factory("BillSearchApi",["$resource",function($resource){return $resource(apiPath+"/bills/:session/search/?term=:term&sort=:sort&limit=:limit&offset=:offset",{session:"@session",term:"@term",sort:"@sort",limit:"@limit",offset:"@offset"})}]),apiModule.factory("BillAggUpdatesApi",["$resource",function($resource){return $resource(apiPath+"/bills/updates/:from/:to?order=:order&type=:type&filter=:filter&limit=:limit&offset=:offset&summary=true",{from:"@from",to:"@to",type:"@type",order:"@order",filter:"@filter",limit:"@limit",offset:"@offset"})}]),apiModule.factory("BillGetApi",["$resource",function($resource){return $resource(apiPath+"/bills/:session/:printNo?view=:view&version=:version",{session:"@session",printNo:"@printNo",view:"@view",version:"@version"})}]),apiModule.factory("BillUpdatesApi",["$resource",function($resource){return $resource(apiPath+"/bills/:session/:printNo/updates?order=:order&filter=:filter&limit=:limit&offset=:offset",{session:"@session",printNo:"@printNo",order:"@order",filter:"@filter",limit:"@limit",offset:"@offset"})}]),apiModule.factory("BillDiffApi",["$resource",function($resource){return $resource(apiPath+"/bills/:session/:printNo/diff/:version1/:version2/",{session:"@session",printNo:"@printNo",version1:"@version1",version2:"@version2"})}]),apiModule.factory("CalendarViewApi",["$resource",function($resource){return $resource(apiPath+"/calendars/:year/:calNo",{year:"@year",calNo:"@calNo"})}]),apiModule.factory("CurrentCalendarIdApi",["$resource",function($resource){return $resource(apiPath+"/calendars/:year?order=DESC&limit=1",{year:"@year"})}]),apiModule.factory("CalendarIdsApi",["$resource",function($resource){return $resource(apiPath+"/calendars/:year",{year:"@year"})}]),apiModule.factory("CalendarSearchApi",["$resource",function($resource){return $resource(apiPath+"/calendars/search",{})}]),apiModule.factory("CalendarUpdatesApi",["$resource",function($resource){return $resource(apiPath+"/calendars/:year/:calNo/updates",{year:"@year",calNo:"@calNo"})}]),apiModule.factory("CalendarFullUpdatesApi",["$resource",function($resource){return $resource(apiPath+"/calendars/updates/:fromDateTime/:toDateTime/",{fromDateTime:"@fromDateTime",toDateTime:"@toDateTime"})}]),apiModule.factory("AgendaListingApi",["$resource",function($resource){return $resource(apiPath+"/agendas/:year?sort=:sort&limit=:limit&offset=:offset",{year:"@year",sort:"@sort",limit:"@limit",offset:"@offset"})}]),apiModule.factory("AgendaMeetingApi",["$resource",function($resource){return $resource(apiPath+"/agendas/meetings/:from/:to",{from:"@from",to:"@to"})}]),apiModule.factory("AgendaSearchApi",["$resource",function($resource){return $resource(apiPath+"/agendas/search?term=:term&sort=:sort&limit=:limit&offset=:offset",{term:"@term",sort:"@sort",limit:"@limit",offset:"@offset"})}]),apiModule.factory("AgendaGetApi",["$resource",function($resource){return $resource(apiPath+"/agendas/:year/:agendaNo/",{year:"@year",agendaNo:"@agendaNo"})}]),apiModule.factory("AgendaUpdatesApi",["$resource",function($resource){return $resource(apiPath+"/agendas/:year/:agendaNo/updates",{year:"@year",agendaNo:"@agendaNo"})}]),apiModule.factory("AgendaAggUpdatesApi",["$resource",function($resource){return $resource(apiPath+"/agendas/updates/:from/:to",{from:"@from",to:"@to"})}]),apiModule.factory("LawListingApi",["$resource",function($resource){return $resource(apiPath+"/laws")}]),apiModule.factory("LawTreeApi",["$resource",function($resource){return $resource(apiPath+"/laws/:lawId?fromLocation=:fromLocation&depth=:depth",{lawId:"@lawId",fromLocation:"@fromLocation",depth:"@depth"})}]),apiModule.factory("LawDocApi",["$resource",function($resource){return $resource(apiPath+"/laws/:lawId/:docId/",{lawId:"@lawId",docId:"@docId"})}]),apiModule.factory("LawFullSearchApi",["$resource",function($resource){return $resource(apiPath+"/laws/search?term=:term",{term:"@term"})}]),apiModule.factory("LawVolumeSearchApi",["$resource",function($resource){return $resource(apiPath+"/laws/:lawId/search?term=:term",{lawId:"@lawId",term:"@term"})}]),apiModule.factory("LawFullUpdatesApi",["$resource",function($resource){return $resource(apiPath+"/laws/updates/:from/:to/",{from:"@from",to:"@to",type:"@type",order:"@order"})}]),apiModule.factory("LawVolumeUpdatesApi",["$resource",function($resource){return $resource(apiPath+"/laws/:lawId/updates",{lawId:"@lawId",order:"@order"})}]),apiModule.factory("SessionListingApi",["$resource",function($resource){return $resource(apiPath+"/transcripts/:year?summary=true&limit=:limit&offset=:offset&sort=:sort",{year:"@year",limit:"@limit",offset:"@offset",sort:"dateTime:desc"})}]),apiModule.factory("SessionTranscriptDetailsApi",["$resource",function($resource){return $resource(apiPath+"/transcripts/:filename",{filename:"@filename"})}]),apiModule.factory("PublicHearingListingApi",["$resource",function($resource){return $resource(apiPath+"/hearings/:year?full=true&limit=:limit&offset=:offset&sort=:soft",{year:"@year",limit:"@limit",offset:"@offset",sort:"date:desc"})}]),apiModule.factory("PublicHearingDetailsApi",["$resource",function($resource){return $resource(apiPath+"/hearings/:filename",{filename:"@filename"})}]),apiModule.factory("TranscriptSearchApi",["$resource",function($resource){return $resource(apiPath+"/transcripts/:year/search",{term:"@term",summary:!0,year:"@year",limit:"@limit",offset:"@offset",sort:"_score:desc,dateTime:desc"})}]),apiModule.factory("PublicHearingSearchApi",["$resource",function($resource){return $resource(apiPath+"/hearings/:year/search",{term:"@term",summary:!0,year:"@year",limit:"@limit",offset:"@offset",sort:"_score:desc,date:desc"})}]),coreModule.factory("MemberApi",["$resource",function($resource){
return $resource(apiPath+"/members/:sessionYear/:chamber?limit=1000",{sessionYear:"@sessionYear",chamber:"@chamber"})}]),coreModule.factory("CommitteeListingApi",["$resource",function($resource){return $resource(apiPath+"/committees/:sessionYear/senate",{sessionYear:"@sessionYear"})}]);var openModule=angular.module("open");openModule.controller("ContentDashboardCtrl",["$scope","$timeout",function($scope,$timeout){$scope.setHeaderVisible(!0),$scope.setHeaderText("Legislation Dashboard"),$scope.items=[];for(var i=0;1e3>i;i++)$scope.items.push(i)}]);var billModule=angular.module("open.bill",["open.core","open.api"]);billModule.controller("BillCtrl",["$scope","$rootScope","$location","$route","$routeParams","BillUtils","MemberApi",function($scope,$rootScope,$location,$route,$routeParams,BillUtils,MemberApi){$scope.setHeaderVisible(!0),$scope.setHeaderText("Search NYS Legislation"),$scope.selectedView=parseInt($routeParams.view,10)||0,$scope.$watch("selectedView",function(n,o){n!==o&&$location.search().view!==n&&($location.search("view",$scope.selectedView),$scope.$broadcast("viewChange",$scope.selectedView))}),$scope.$on("$locationChangeSuccess",function(){$scope.selectedView=+$location.search().view||0}),$scope.getStatusDesc=function(status){return BillUtils.getStatusDesc(status)}}]);var billModule=angular.module("open.bill"),billModule=angular.module("open.bill");billModule.filter("resolutionOrBill",function(){return function(input){return input?"Resolution":"Bill"}}),billModule.filter("prettyAmendVersion",function(){return function(input){return input?input:"Original"}}),billModule.filter("voteTypeFilter",function(){return function(voteType){switch(voteType){case"AYE":return"Aye";case"NAY":return"Nay";case"AYEWR":return"Aye with reservations";case"ABS":return"Absent";case"ABD":return"Abstained";case"EXC":return"Excused";default:return"Unknown"}}});var billModule=angular.module("open.bill");billModule.directive("milestones",[function(){var defaultMilestones=function(chamber){var milestoneArr=[],create=function(desc){return{statusDesc:desc,actionDate:null}},senateMilestones=[create("In Senate Committee"),create("On Senate Floor"),create("Passed Senate")],assemblyMilestones=[create("In Assembly Committee"),create("On Assembly Floor"),create("Passed Assembly")];return milestoneArr="SENATE"==chamber?milestoneArr.concat(senateMilestones).concat(assemblyMilestones):milestoneArr.concat(assemblyMilestones).concat(senateMilestones),milestoneArr=milestoneArr.concat([create("Sent to Governor"),create("Signed Into Law")])},getPaddedMilestones=function(milestoneArr,chamber){var paddedMsArr=[];return milestoneArr&&(paddedMsArr=defaultMilestones(chamber),[].splice.apply(paddedMsArr,[0,milestoneArr.size].concat(milestoneArr.items))),paddedMsArr};return{restrict:"E",scope:{milestoneArr:"=",chamber:"="},replace:!0,template:'<div class="bill-ms-container"><div ng-repeat="milestone in paddedMs"><div class="bill-ms-step" ng-class="{\'filled\': milestone.actionDate !== null, \'vetoed\': milestone.statusDesc == \'Vetoed\'}"><md-tooltip>{{milestone.statusDesc}}<span ng-if="milestone.actionDate">&nbsp;| {{milestone.actionDate | moment:\'MMM DD, YYYY\'}}</span><span ng-if="milestone.committeeName">&nbsp;| {{milestone.committeeName}}</span><span ng-if="milestone.billCalNo">&nbsp;| Cal #{{milestone.billCalNo}}</span></md-tooltip></div><div ng-class="{\'bill-ms-line\': $index !== 7}"></div></div></div>',link:function($scope,$element,$attrs){$scope.paddedMs=getPaddedMilestones($scope.milestoneArr,$scope.chamber)}}}]),billModule.directive("billListing",["BillUtils",function(BillUtils){return{restrict:"E",scope:{billIds:"=",billRefsMap:"=",bills:"=",billSearchTerm:"=",showTitle:"=",showImg:"="},templateUrl:ctxPath+"/partial/content/bill/bill-listing-view",controller:function($scope,$element){$scope.billUtils=BillUtils,$scope.billIds&&$scope.billRefsMap&&!$scope.bills?$scope.billViews=$scope.billIds.map(function(id){var baseIdStr=id.basePrintNo+"-"+id.session;return $scope.billRefsMap[baseIdStr]?$scope.billRefsMap[baseIdStr]:angular.extend({},id,{idOnly:!0})}):$scope.bills&&($scope.billViews=$scope.bills)}}}]),billModule.directive("billSearchListing",["BillUtils",function(BillUtils){return{restrict:"E",scope:{billSearchResponse:"=",billSearchTerm:"=",pagination:"=",onPageChange:"=",showTitle:"=",showImg:"="},templateUrl:ctxPath+"/partial/content/bill/bill-search-listing-view",controller:function($scope,$element){$scope.billUtils=BillUtils;var currPage=$scope.pagination.currPage;$scope.pageChange=function(newPageNumber){currPage!=newPageNumber&&$scope.onPageChange&&(currPage=newPageNumber,$scope.onPageChange(newPageNumber))}}}}]),billModule.directive("billUpdatesListing",["BillUtils",function(BillUtils){return{restrict:"E",scope:{billUpdateResponse:"=",pagination:"=",onPageChange:"=",showTitle:"=",showImg:"=",showDetail:"="},templateUrl:ctxPath+"/partial/content/bill/bill-update-listing-view",controller:function($scope,$element){$scope.billUtils=BillUtils;var currPage=$scope.pagination.currPage;$scope.pageChange=function(newPageNumber){currPage!=newPageNumber&&$scope.onPageChange&&(currPage=newPageNumber,$scope.onPageChange(newPageNumber))}}}}]),billModule.directive("billRefineSearchPanel",["BillUtils",function(BillUtils){return{restrict:"E",scope:{searchParams:"=",onChange:"="},templateUrl:ctxPath+"/partial/content/bill/bill-refine-search-panel",controller:function($scope,$element){$scope.params=$scope.params||{},$scope.$watchCollection("searchParams",function(n,o){n!=o&&$scope.onChange($scope.searchParams)})}}}]);var billModule=angular.module("open.bill");billModule.controller("BillSearchCtrl",["$scope","$filter","$routeParams","$location","$sce","BillSearchApi","PaginationModel",function($scope,$filter,$routeParams,$location,$sce,BillSearch,PaginationModel){$scope.curr={state:"initial",pagination:angular.extend({},PaginationModel,{itemsPerPage:6}),billSearch:{term:$routeParams.search||"",session:$routeParams.session||"",refine:{},isRefined:!1,sort:$routeParams.sort||"_score:desc,session:desc",response:{},results:[],error:!1}},$scope.refineUrlParamPrefix="refine:",$scope.refinePaths={actionText:"actions.\\*.text",agendaNo:"\\*.agendaId.number",billCalNo:"\\*.billCalNo",chamber:"billType.chamber",committeeName:"status.committeeName",fullText:"amendments.\\*.fullText",isRes:"billType.resolution",lawCode:"amendments.\\*.lawCode",lawSection:"amendments.\\*.lawSection",memo:"amendments.\\*.memo",printNo:"printNo",sponsor:"sponsor.member.memberId",status:"status.statusType",title:"title"},$scope.refineFixedPaths={signed:"(signed:true OR adopted:true)",hasVotes:"(votes.size:>0)",hasApVetoMemo:"(vetoMessages.size:>0 OR !_empty_:approvalMessage)",isGov:"(programInfo.name:*Governor*)",isSubstituted:"(_exists_:substitutedBy)",isUni:"(amendments.\\*.uniBill:true)",isBudget:"(sponsor.budget:true)",isRulesSponsor:"(sponsor.rules:true)"},$scope.init=function(){$scope.curr.pagination.currPage=Math.max(parseInt($routeParams.searchPage)||1,1),$scope.getRefineUrlParams($scope.refineUrlParamPrefix),$scope.simpleSearch(!1)},$scope.simpleSearch=function(resetPagination){var term=$scope.curr.billSearch.term||"*";if(term){$location.search("search",$scope.curr.billSearch.term),$scope.curr.state="searching",resetPagination&&($scope.curr.pagination.currPage=1,$location.search("searchPage",1));var query=$scope.buildRefinedQuery(term);$scope.curr.billSearch.response=BillSearch.get({session:$scope.curr.billSearch.session,term:query,sort:$scope.curr.billSearch.sort,limit:$scope.curr.pagination.getLimit(),offset:$scope.curr.pagination.getOffset()},function(){$scope.curr.billSearch.response&&$scope.curr.billSearch.response.success&&($scope.curr.billSearch.error=!1,$scope.curr.billSearch.results=$scope.curr.billSearch.response.result.items||[],$scope.markHighlightsAsSafe($scope.curr.billSearch.results),$scope.curr.pagination.setTotalItems($scope.curr.billSearch.response.total),$scope.curr.state="searched")},function(data){$scope.curr.billSearch.error=data.data,$scope.curr.pagination.setTotalItems(0),$scope.curr.state="searched"})}else $scope.curr.billSearch.error=!1,$scope.curr.billSearch.results=[],$scope.curr.pagination.setTotalItems(0)},$scope.buildRefinedQuery=function(term){var refine=$scope.curr.billSearch.refine,refineTerms=[];for(var p in refine)refine.hasOwnProperty(p)&&refine[p]&&($scope.refineFixedPaths[p]?refineTerms.push($scope.refineFixedPaths[p]):$scope.refinePaths[p]&&refineTerms.push($scope.refinePaths[p]+":("+refine[p]+")"));return refineTerms.length>0?(term+=" AND "+refineTerms.join(" AND "),$scope.curr.billSearch.isRefined=!0):$scope.curr.billSearch.isRefined=!1,term},$scope.onRefineUpdate=function(){$scope.setRefineUrlParams($scope.curr.billSearch.refine,$scope.refineUrlParamPrefix),$scope.simpleSearch(!1)},$scope.resetRefine=function(){$scope.curr.billSearch.refine={},$scope.curr.billSearch.isRefined=!1,$scope.setRefineUrlParams($scope.curr.billSearch.refine,$scope.refineUrlParamPrefix),$scope.simpleSearch(!0)},$scope.setRefineUrlParams=function(refine,paramPrefix){for(var p in $routeParams)$routeParams.hasOwnProperty(p)&&p.slice(0,paramPrefix.length)===paramPrefix&&(delete $routeParams[p],$scope.setSearchParam(p,null));for(var p in refine)refine.hasOwnProperty(p)&&refine[p]&&$scope.setSearchParam(paramPrefix+p,refine[p])},$scope.getRefineUrlParams=function(paramPrefix){for(var p in $routeParams)$routeParams.hasOwnProperty(p)&&p.slice(0,paramPrefix.length)===paramPrefix&&($scope.curr.billSearch.refine[p.slice(paramPrefix.length)]=$routeParams[p],$scope.curr.billSearch.isRefined=!0);return $scope.curr.billSearch.isRefined},$scope.markHighlightsAsSafe=function(results){angular.forEach(results,function(r){if(r.hasOwnProperty("highlights"))for(var prop in r.highlights)r.highlights[prop][0]&&(r.highlights[prop][0]=$sce.trustAsHtml(String(r.highlights[prop][0])))})},$scope.sortChanged=function(){$scope.setSearchParam("sort",$scope.curr.billSearch.sort),$scope.simpleSearch(!0)},$scope.sessionChanged=function(){$scope.setSearchParam("session",$scope.curr.billSearch.session),$scope.simpleSearch(!0)},$scope.pageChanged=function(newPage){$scope.setSearchParam("searchPage",newPage),$scope.simpleSearch(!1)},$scope.init()}]);var billModule=angular.module("open.bill");billModule.controller("BillUpdatesCtrl",["$scope","$location","$routeParams","BillAggUpdatesApi","PaginationModel",function($scope,$location,$routeParams,BillAggUpdatesApi,PaginationModel){$scope.pagination=angular.extend({},PaginationModel),$scope.pagination.currPage=$routeParams.page||1,$scope.pagination.itemsPerPage=20,$scope.curr={state:"initial",options:{fromDate:$routeParams.fromDate?new Date($routeParams.fromDate):moment().subtract(5,"days").startOf("minute").toDate(),toDate:$routeParams.toDate?new Date($routeParams.toDate):moment().add(1,"days").startOf("minute").toDate(),type:$routeParams.type||"published",sortOrder:$routeParams.sortOrder||"desc",detail:$routeParams.detail===!0,filter:$routeParams.filter||""},billUpdates:{response:{},total:0,result:{},errMsg:""}},$scope.getUpdates=function(){$scope.curr.state="searching",$scope.curr.billUpdates.response=BillAggUpdatesApi.get({from:$scope.toZonelessISOString(moment($scope.curr.options.fromDate)),to:$scope.toZonelessISOString(moment($scope.curr.options.toDate)),type:$scope.curr.options.type,order:$scope.curr.options.sortOrder,detail:$scope.curr.options.detail,filter:$scope.curr.options.filter,limit:$scope.pagination.getLimit(),offset:$scope.pagination.getOffset()},function(){$scope.curr.billUpdates.total=$scope.curr.billUpdates.response.total,$scope.curr.billUpdates.result=$scope.curr.billUpdates.response.result,$scope.curr.state="searched"},function(resp){$scope.curr.billUpdates.response.success=!1,$scope.curr.billUpdates.total=0,$scope.curr.billUpdates.errMsg=resp.data.message,$scope.curr.state="searched"})},$scope.setUrlParams=function(){angular.forEach($scope.curr.options,function(paramVal,key){paramVal&&paramVal instanceof Date&&(paramVal=$scope.toZonelessISOString(moment(paramVal))),$scope.setSearchParam(key,paramVal)})},$scope.onParamChange=function(){$scope.setUrlParams(),$scope.getUpdates(),$scope.pagination.reset()},$scope.onPageChange=function(newPage){$scope.setSearchParam("page",newPage),$scope.getUpdates()},$scope.init=function(){$scope.getUpdates()},$scope.init()}]);var billModule=angular.module("open.bill");billModule.controller("BillViewCtrl",["$scope","$filter","$location","$routeParams","$sce","BillGetApi","BillDiffApi","BillUpdatesApi",function($scope,$filter,$location,$routeParams,$sce,BillGetApi,BillDiffApi,BillUpdatesApi){$scope.apiPath=null,$scope.response=null,$scope.bill=null,$scope.loading=!1,$scope.fullTextFetched={},$scope.curr={amdVersion:"",compareVersion:"None",selectedView:parseInt($routeParams.view,10)||1,updateTypeFilter:"status",updateOrder:"desc"},$scope.diffHtml=null,$scope.updateHistory=null,$scope.$watch("curr.selectedView",function(newView,oldView){newView!==oldView&&$location.search("view",$scope.curr.selectedView).replace(),5===newView&&$scope.fetchFullText()}),$scope.$watch("curr.amdVersion",function(newVersion,oldVersion){newVersion!==oldVersion&&5===$scope.curr.selectedView&&$scope.fetchFullText()}),$scope.init=function(){$scope.session=$routeParams.session,$scope.printNo=$routeParams.printNo;var baseVersionRegex=/default|base/i,requestedVersion=baseVersionRegex.exec($routeParams.version)?"":$routeParams.version&&$routeParams.version.toUpperCase();$scope.loading=!0,$scope.billApiPath=$sce.trustAsResourceUrl(apiPath+"/bills/"+$scope.session+"/"+$scope.printNo),$scope.response=BillGetApi.get({printNo:$scope.printNo,session:$scope.session,view:"with_refs_no_fulltext"},function(){$scope.response.success&&($scope.bill=$scope.response.result,$scope.mergeActions($scope.bill),$scope.setHeaderText("NYS "+$scope.bill.billType.desc+" "+$filter("resolutionOrBill")($scope.bill.billType.resolution)+" "+$scope.bill.basePrintNo+"-"+$scope.bill.session+($scope.bill.session!==$scope.activeSession?" (Inactive) ":"")),$scope.curr.amdVersion=$scope.bill.amendments.items.hasOwnProperty(requestedVersion)?requestedVersion:$scope.bill.activeVersion),$scope.loading=!1},function(response){$scope.setHeaderText(response.data.message),$scope.response=response.data,$scope.loading=!1})}(),$scope.fetchFullText=function(){if(!$scope.fullTextFetched[$scope.curr.amdVersion]){$scope.loading=!0;var fullTextResponse=BillGetApi.get({printNo:$scope.printNo,session:$scope.session,view:"only_fulltext",version:$scope.curr.amdVersion},function(){if(fullTextResponse.success){var version=fullTextResponse.result.version,text=fullTextResponse.result.fullText;$scope.bill.amendments.items[version].fullText=text,$scope.fullTextFetched[version]=!0}$scope.loading=!1},function(){$scope.loading=!1})}},$scope.mergeActions=function(bill){var currPrintNoStr=bill.basePrintNoStr;if(bill.substitutedBy){var subPrintNoStr=bill.substitutedBy.basePrintNoStr,mergedActions=bill.actions.items.concat(bill.billInfoRefs.items[subPrintNoStr].actions.items).sort(function(a,b){return moment(a.date).diff(moment(b.date))}),actions1=mergedActions.slice(0),actions2=mergedActions.slice(0);actions1=actions1.map(function(a){return a.billId.basePrintNoStr==currPrintNoStr?a:null}),actions2=actions2.map(function(a){return a.billId.basePrintNoStr==subPrintNoStr?a:null}),bill.mergedActions=[[currPrintNoStr,actions1],[subPrintNoStr,actions2]]}else bill.mergedActions=[[currPrintNoStr,bill.actions.items]]},$scope.diffBills=function(){"None"!==$scope.curr.compareVersion?$scope.diffResponse=BillDiffApi.get({printNo:$scope.bill.printNo,session:$scope.bill.session,version1:$scope.curr.compareVersion.trim(),version2:$scope.curr.amdVersion},function(){$scope.diffHtml=$sce.trustAsHtml($scope.diffResponse.result.diffHtml)}):$scope.diffHtml=null},$scope.initialGetUpdates=function(){null===$scope.updateHistory&&$scope.getUpdates()},$scope.getUpdates=function(){$scope.updateHistoryResponse=BillUpdatesApi.get({printNo:$scope.printNo,session:$scope.session,order:$scope.curr.updateOrder,filter:$scope.curr.updateTypeFilter,offset:1,limit:1e3},function(){$scope.updateHistoryResponse.success===!0&&($scope.updateHistory=$scope.updateHistoryResponse.result)})},$scope.backToSearch=function(){$location.search("view",0),$location.path(ctxPath+"/bills")}}]);var calendarModule=angular.module("open.calendar",["open.core","open.api"]),calendarModule=angular.module("open.calendar");calendarModule.filter("sectionDisplayName",function(){var sectionNameMap={ORDER_OF_THE_FIRST_REPORT:"First Report",ORDER_OF_THE_SECOND_REPORT:"Second Report",ORDER_OF_THE_SPECIAL_REPORT:"Special Report",THIRD_READING_FROM_SPECIAL_REPORT:"Third Reading from Special Report",THIRD_READING:"Third Reading",STARRED_ON_THIRD_READING:"Starred on Third Reading"};return function(input){return sectionNameMap.hasOwnProperty(input)?sectionNameMap[input]:"* "+input}});var sectionArray=["ORDER_OF_THE_FIRST_REPORT","ORDER_OF_THE_SECOND_REPORT","ORDER_OF_THE_SPECIAL_REPORT","THIRD_READING_FROM_SPECIAL_REPORT","THIRD_READING","STARRED_ON_THIRD_READING"];calendarModule.filter("orderBySection",function(){return function(obj){var array=[];return Object.keys(obj).forEach(function(key){array.push(obj[key])}),array.sort(function(a,b){return sectionArray.indexOf(a.items[0].sectionType)-sectionArray.indexOf(b.items[0].sectionType)}),array}});var calendarModule=angular.module("open.calendar");calendarModule.directive("calendarEntryTable",["BillUtils",function(BillUtils){return{scope:{year:"=",calEntries:"=",getCalBillNumUrl:"&",highlightValue:"=",sectionType:"@",scrollTo:"=",calEntryFilter:"="},templateUrl:ctxPath+"/partial/content/calendar/calendar-entry-table",controller:function($scope){$scope.billUtils=BillUtils,$scope.billPageBaseUrl=ctxPath+"/bills",$scope.getCalBillNumUrl=$scope.getCalBillNumUrl()}}}]);var calendarModule=angular.module("open.calendar");calendarModule.controller("CalendarViewCtrl",["$scope","$rootScope","$routeParams","$location","$q","$filter","$timeout","CalendarViewApi","CurrentCalendarIdApi",function($scope,$rootScope,$routeParams,$location,$q,$filter,$timeout,CalendarViewApi,CurrentCalendarIdApi){function processNewCalendarView(){$scope.calendarNum=$scope.calendarView.calendarNumber,$scope.year=$scope.calendarView.year,$scope.setHeaderText("Senate Calendar #"+$scope.calendarView.calendarNumber+" - "+$filter("moment")($scope.calendarView.calDate,"ll")),$rootScope.$emit("newCalendarEvent"),$scope.scrollToBill($location.hash()),(!$scope.tabParam||$scope.pageNames.indexOf($scope.tabParam)<0)&&($scope.calendarView.activeLists.size>0?$scope.tabParam="active-list":$scope.tabParam="floor"),$scope.changeTab($scope.tabParam)}function getCalEntryPredicate(field,matchingValue){return function(calEntry){return calEntry[field]===matchingValue}}function billInActiveList(calEntryPredicate){var activeLists=$scope.calendarView.activeLists.items;for(var ali in activeLists){var index=0;for(var ei in activeLists[ali].entries.items){if(calEntryPredicate(activeLists[ali].entries.items[ei]))return{"active-list":index};index++}}return!1}function billInFloorCal(calEntryPredicate){var floorCals=[$scope.calendarView.floorCalendar];for(var k in $scope.calendarView.supplementalCalendars.items)floorCals.push($scope.calendarView.supplementalCalendars.items[k]);for(var fci in floorCals){var floorCalSections=floorCals[fci].entriesBySection.items;for(var section in floorCalSections){var index=0;for(var entry in floorCalSections[section].items){if(calEntryPredicate(floorCalSections[section].items[entry])){var res={};return res[section]=index,res}index++}}}return!1}$scope.calendarView=null,$scope.calendarHeaderText="",$scope.ctxPath=ctxPath,$scope.curr={state:"initial",activeIndex:2,topListIndex:{},openSections:{},sectionFilter:{}},$scope.pageNames=["sklerch","active-list","floor","updates"],$scope.highlightValue="none",$scope.init=function(){$scope.getCalendarViewById($routeParams.year,$routeParams.calNo),$routeParams.hasOwnProperty("view")&&["active-list","sklerch"].indexOf($routeParams.view)<0&&($scope.tabParam=$routeParams.view),"sview"in $routeParams&&($scope.previousPage=$routeParams.sview),$scope.$watch("curr.activeIndex",function(newIndex,oldIndex){newIndex>=1?$location.search("view",$scope.pageNames[newIndex]).replace():(0>newIndex||newIndex>=$scope.pageNames.length)&&$location.search("view",null).replace()})},$scope.changeTab=function(pageName){console.log("switching to "+pageName);var newIndex=$scope.pageNames.indexOf(pageName);newIndex>=0&&($scope.curr.activeIndex=newIndex)},$scope.getCalendarViewById=function(calendarYear,calendarNo){console.log("loading calendar",calendarYear,calendarNo),$scope.curr.state="fetching",$scope.calendarResponse=CalendarViewApi.get({year:calendarYear,calNo:calendarNo},function(){$scope.calendarResponse.success===!0&&(console.log("received successful calendar response"),$scope.calendarView=$scope.calendarResponse.result,processNewCalendarView()),$scope.curr.state="fetching"},function(response){$scope.setHeaderText(response.data.message),$scope.calendarResponse=response.data,$scope.curr.state="fetching"})},$scope.scrollToBill=function(identifier){identifier=identifier.toUpperCase();var calEntryPredicate,billCalNoPattern=/^\d+$/,printNoPattern=/^([SA]\d+)[A-Z]?$/i;if(billCalNoPattern.test(identifier))calEntryPredicate=getCalEntryPredicate("billCalNo",parseInt(identifier));else{var pnResult=printNoPattern.exec(identifier);if(!pnResult)return;calEntryPredicate=getCalEntryPredicate("basePrintNo",pnResult[1])}var match;if(match=billInFloorCal(calEntryPredicate),match||(match=billInActiveList(calEntryPredicate),$scope.tabParam="active-list"),match){$scope.tabParam="floor";for(var section in match)$scope.curr.topListIndex[section]=match[section],$scope.curr.openSections[section]=!0;$scope.highlightValue=identifier}},$scope.backToSearch=function(){var currentParams=$location.search(),url=ctxPath+"/calendars",firstParam=!0;for(var param in currentParams)"view"!=param&&(url+=(firstParam?"?":"&")+("sview"==param?"view":param)+"="+currentParams[param],firstParam=!1);$location.url(url)},$scope.getCalBillNumUrl=function(year,calBillNum){return ctxPath+"/calendars?view=search&sfield=billCalNo&syear="+year+"&svalue="+calBillNum},$scope.init()}]),calendarModule.controller("CalendarActiveListCtrl",["$scope","$rootScope",function($scope,$rootScope){function populateActiveLists(){if($scope.calendarView){$scope.activeLists=[];for(var seqNo=0;$scope.calendarView.activeLists.items.hasOwnProperty(seqNo);seqNo++)$scope.activeLists.push($scope.calendarView.activeLists.items[seqNo]);generateActiveListFilter()}}function generateActiveListFilter(){$scope.activeListFilter={},angular.forEach($scope.activeLists,function(activeList){$scope.activeListFilter[activeList.sequenceNumber]=!0})}function filterActiveListEntries(){$scope.displayedEntries=[],angular.forEach($scope.activeLists,function(activeList){$scope.activeListFilter[activeList.sequenceNumber]&&($scope.displayedEntries=$scope.displayedEntries.concat(activeList.entries.items))})}$scope.activeLists=[],$scope.activeListFilter={},$scope.displayedEntries=[],$rootScope.$on("newCalendarEvent",populateActiveLists),$scope.$watch("activeListFilter",filterActiveListEntries,!0),populateActiveLists()}]),calendarModule.controller("FloorCalendarCtrl",["$scope","$rootScope",function($scope,$rootScope){function populateFloorCals(){$scope.calendarView&&($scope.floorCals={},$scope.calendarView.floorCalendar.year&&($scope.floorCals={floor:$scope.calendarView.floorCalendar}),$scope.calendarView.supplementalCalendars.size>0&&angular.forEach($scope.calendarView.supplementalCalendars.items,function(floorCal,version){$scope.floorCals[version]=floorCal}),generateFloorCalFilter())}function generateFloorCalFilter(){$scope.floorCalFilter={},$scope.floorCalVersions=[],angular.forEach($scope.floorCals,function(floorCal,version){$scope.floorCalFilter[version]=!0,$scope.floorCalVersions.push(version)})}function filterFloorCalendarEntries(){$scope.displayedSections={},angular.forEach($scope.floorCals,function(floorCal,version){$scope.floorCalFilter[version]&&angular.forEach(floorCal.entriesBySection.items,function(section,sectionName){$scope.displayedSections.hasOwnProperty(sectionName)||($scope.displayedSections[sectionName]=[]),$scope.displayedSections[sectionName]=$scope.displayedSections[sectionName].concat(section.items)})})}$scope.floorCals={},$scope.floorCalFilter={},$scope.floorCalVersions=[],$scope.displayedSections={},$scope.versionSortValue=function(version){return"floor"==version?0:version.charCodeAt(0)},$scope.sectionSortValue=sectionArray.indexOf,$rootScope.$on("newCalendarEvent",populateFloorCals),$scope.$watch("floorCalFilter",filterFloorCalendarEntries,!0),populateFloorCals()}]);var calendarModule=angular.module("open.calendar");calendarModule.controller("CalendarBrowseCtrl",["$scope","$rootScope","$routeParams","$location","$timeout","$q","$mdToast","$mdMedia","CalendarIdsApi",function($scope,$rootScope,$routeParams,$location,$timeout,$q,$mdToast,$mdMedia,CalendarIdsApi){function getCalendarIds(year){var deferred=$q.defer(),idResponse=CalendarIdsApi.get({year:year,limit:"all"},function(){idResponse.success?($scope.calendarIds[year]=idResponse.result.items,deferred.resolve($scope.calendarIds)):deferred.reject("unsuccessful calendar id request")});return deferred.promise}function getEvent(calendarId){var fitsFull=window.innerWidth>820,title=fitsFull?"Floor Cal #"+calendarId.calendarNumber+" - "+calendarId.floorCalendar.totalEntries+" Bills\n"+calendarId.supplementalCalendars.size+" Supplementals\n"+calendarId.activeLists.size+" Active Lists":"Calendar "+calendarId.calendarNumber;return{title:title,start:calendarId.calDate,calNo:calendarId.calendarNumber,className:"session-day"}}function getCalendarEvents(start,end,callback){for(var calendarIdPromises=[],years=[],year=start.getFullYear();year<=end.getFullYear();year++)$scope.activeYears.indexOf(year)>=0&&$scope.loadedYears.indexOf(year)<0&&(calendarIdPromises.push(getCalendarIds(year)),years.push(year));calendarIdPromises.length>0?($scope.requestsInProgress+=1,$q.all(calendarIdPromises).then(function(){for(var i in years)if(years.hasOwnProperty(i)&&$scope.loadedYears.indexOf(years[i])<0){console.log("Fetching year "+years[i]);var foundMonths=[];$scope.calendarIds[years[i]].map(getEvent).forEach(function(event){foundMonths[new Date(event.start).getMonth()]=!0,$scope.events.push(event)});for(var month=0;12>month;month++)if(!foundMonths.hasOwnProperty(month)){var momentDate=moment([years[i],month,1]);$scope.events.push({title:"No sessions exist for the month of "+momentDate.format("MMMM")+".",start:momentDate.day("Monday").add(7,"days").format("YYYY-MM-DD"),className:"no-session-month"})}$scope.loadedYears.push(years[i])}$scope.requestsInProgress-=1,callback($scope.events)})):callback($scope.events)}function getEventSourcesObject(){return{events:getCalendarEvents,allDay:!0,className:"calendar-event",editable:!1}}function onEventClick(event,jsEvent,view){event.calNo&&$location.url($scope.getCalendarUrl(event.start.getFullYear(),event.calNo))}function viewRenderHandler(view,element){var monthStart=moment(view.start);$scope.setSearchParam("bdate",monthStart.format("YYYY-MM-DD"),!monthStart.isSame(moment(),"month"))}function eventRenderHandler(event,element,view){event.start.getMonth()!==view.start.getMonth()&&(element[0].hidden=!0)}function getCalendarConfig(){return{editable:!1,theme:!1,header:{left:window.innerWidth>550?"prevYear prev,next nextYear":"prev,next",center:"title",right:"today"},viewRender:viewRenderHandler,eventRender:eventRenderHandler,fixedWeekCount:!1,aspectRatio:1.5,eventClick:onEventClick,weekends:!1,buttonText:{today:"View Current month"}}}$scope.curr={prevStart:null,monthHasEvents:!1,startDate:null},$scope.eventSources=[],$scope.calendarConfig=null,$scope.calendarIds={},$scope.requestsInProgress=0,$scope.events=[],$scope.loadedYears=[],$scope.init=function(){$scope.eventSources.push(getEventSourcesObject()),$scope.calendarConfig=getCalendarConfig(),"bdate"in $routeParams?$scope.setCalendarDate($routeParams.bdate):$scope.renderCalendar()},$scope.renderCalendar=function(){$timeout(function(){angular.element("#calendar-date-picker").fullCalendar("render")})},$rootScope.$on("renderCalendarEvent",$scope.renderCalendar),$scope.setCalendarDate=function(date){var momentDate=moment(date);momentDate.isValid()&&$timeout(function(){angular.element("#calendar-date-picker").fullCalendar("gotoDate",momentDate.toDate()),$scope.renderCalendar()})},$scope.init()}]);var calendarModule=angular.module("open.calendar");calendarModule.controller("CalendarSearchCtrl",["$scope","$routeParams","$location","CalendarSearchApi","PaginationModel",function($scope,$routeParams,$location,SearchApi,paginationModel){function addSearchTerm(query,term){return query?query+" AND "+term:term}function buildFieldQuery(){var query=!1;return $scope.searchFields.year&&(query=addSearchTerm(query,"year:"+$scope.searchFields.year)),$scope.searchFields.fieldName&&$scope.searchFields.fieldValue&&(query="calendarNumber"===$scope.searchFields.fieldName?addSearchTerm(query,"calendarNumber:"+$scope.searchFields.fieldValue):addSearchTerm(query,($scope.searchFields.activeList?"activeLists":"")+"\\*."+$scope.searchFields.fieldName+":"+$scope.searchFields.fieldValue)),query}function getFieldSortString(){return $scope.searchFields.order in $scope.orderOptions?"calDate:"+$scope.searchFields.order:""}function setFieldParameters(){angular.forEach({syear:$scope.searchFields.year,sfield:$scope.searchFields.fieldName,svalue:$scope.searchFields.fieldValue,sactlist:$scope.searchFields.activeList,sorder:$scope.searchFields.order},function(value,paramName){$scope.setSearchParam(paramName,value,0===$scope.searchActiveIndex)})}function setQueryParameters(){$scope.setSearchParam("search",$scope.searchQuery.term,1===$scope.searchActiveIndex),$scope.setSearchParam("sort",$scope.searchQuery.sort,1===$scope.searchActiveIndex)}$scope.searchResults=[],$scope.searchResponse={},$scope.searchActiveIndex=0,$scope.searchQuery={term:"",sort:""};var defaultFields={year:2015,fieldName:"calendarNumber",fieldValue:"",activeList:!1,order:"DESC"};$scope.searchFields=angular.extend({},defaultFields);angular.extend({},defaultFields);$scope.fieldOptions={calendarNumber:"Calendar No.",printNo:"Print No.",billCalNo:"Bill Calendar No."},$scope.orderOptions={DESC:"Newest First",ASC:"Oldest First"},$scope.pagination=angular.extend({},paginationModel),$scope.searching=!1,$scope.init=function(){if("stype"in $routeParams&&"string"===$routeParams.stype&&($scope.searchActiveIndex=1),"search"in $routeParams&&1===$scope.searchActiveIndex&&($scope.searchQuery.term=$routeParams.search),"sort"in $routeParams&&1===$scope.searchActiveIndex&&($scope.searchQuery.sort=$routeParams.sort),"syear"in $routeParams){var year=parseInt($routeParams.syear);$scope.activeYears.indexOf(year)>=0&&($scope.searchFields.year=year)}"sfield"in $routeParams&&$routeParams.sfield in $scope.fieldOptions&&($scope.searchFields.fieldName=$routeParams.sfield),"svalue"in $routeParams&&($scope.searchFields.fieldValue=$routeParams.svalue),"sactlist"in $routeParams&&($scope.searchFields.activeList="true"===$routeParams.sactlist),"sorder"in $routeParams&&$routeParams.sorder in $scope.orderOptions&&($scope.searchFields.order=$routeParams.sorder),$scope.$watchCollection("searchFields",$scope.fieldSearch),$scope.$watch("pagination.currPage",function(newPage,oldPage){newPage!==oldPage&&newPage>0&&($scope.setSearchParam("searchPage",newPage,newPage>1),$scope.termSearch(!1))}),$scope.$watch("searchActiveIndex",function(newIndex,oldIndex){0===newIndex&&$scope.fieldSearch(),$scope.setSearchParam("stype","string",1===newIndex),setFieldParameters(),setQueryParameters()}),$scope.$watchCollection("searchQuery",function(newQ,oldQ){$scope.termSearch(!0),setQueryParameters()})},$scope.termSearch=function(resetPagination){
if(resetPagination&&1!=$scope.pagination.currPage)$scope.pagination.currPage=1;else{var term=$scope.searchQuery.term,sort=$scope.searchQuery.sort;term?(console.log("searching.","term:",term,"sort:",sort),$scope.searching=!0,$scope.searchResponse=SearchApi.get({term:term,sort:sort,limit:$scope.pagination.getLimit(),offset:$scope.pagination.getOffset()},function(){$scope.searchResults=$scope.searchResponse.result.items||[],$scope.searching=!1,$scope.pagination.setTotalItems($scope.searchResponse.total)},function(){$scope.searching=!1})):(console.log("not searching."),$scope.searchResults=[],$scope.pagination.setTotalItems(0))}},$scope.fieldSearch=function(){if(0===$scope.searchActiveIndex){var queryString=buildFieldQuery(),sortString=getFieldSortString();$scope.searchQuery.term!==queryString&&($scope.searchQuery.term=queryString?queryString:""),$scope.searchQuery.sort!==getFieldSortString()&&($scope.searchQuery.sort=sortString)}setFieldParameters()},$scope.getTotalActiveListBills=function(cal){var count=0;return angular.forEach(cal.activeLists.items,function(activeList){count+=activeList.totalEntries}),count},$scope.getTotalFloorBills=function(cal){var count=0;return cal.floorCalendar.year&&(count+=cal.floorCalendar.totalEntries),angular.forEach(cal.supplementalCalendars.items,function(supCal){count+=supCal.totalEntries}),count},$scope.init()}]);var calendarModule=angular.module("open.calendar");calendarModule.controller("CalendarUpdatesCtrl",["$scope","$rootScope","CalendarUpdatesApi",function($scope,$rootScope,UpdatesApi){$scope.updateResponse={result:{items:[]}},$scope.updatesOrder="ASC",$scope.getUpdates=function(){if($scope.year&&$scope.calendarNum){$scope.loadingUpdates=!0,$scope.updateResponse={result:{items:[]}};var response=UpdatesApi.get({year:$scope.year,calNo:$scope.calendarNum,detail:!0,order:$scope.updatesOrder},function(){$scope.loadingUpdates=!1,response.success&&($scope.updateResponse=response)},function(){$scope.loadingUpdates=!1})}},$rootScope.$on("newCalendarEvent",function(){$scope.getUpdates()}),$scope.$watch("updatesOrder",function(){$scope.getUpdates()})}]),calendarModule.controller("CalendarSearchPageCtrl",["$scope","$rootScope","$routeParams","$location","$timeout",function($scope,$rootScope,$routeParams,$location,$timeout){function init(){"view"in $routeParams&&$scope.changeTab($routeParams.view),$scope.$watch("activeIndex",function(newIndex,oldIndex){$scope.setSearchParam("view",$scope.pageNames[newIndex])})}$scope.pageNames=["browse","search","updates"],$scope.activeYears=[];for(var year=moment().year();year>=2009;year--)$scope.activeYears.push(year);$scope.changeTab=function(pageName){console.log("changing view to",pageName),$scope.activeIndex=$scope.pageNames.indexOf(pageName)},$scope.pageIsActive=function(pageName){return $scope.activeIndex==$scope.pageNames.indexOf(pageName)},$scope.setCalendarHeaderText=function(){$timeout(function(){var pageName=$scope.pageNames[$scope.activeIndex],newHeader="Search For Calendars";"browse"==pageName?newHeader="Browse Calendars":"updates"==pageName&&(newHeader="View Calendar Updates"),$scope.setHeaderText(newHeader)})},$scope.getCalendarUrl=function(year,calNum,hash){var url=ctxPath+"/calendars/"+year+"/"+calNum,firstParam=!0;for(var param in $location.search())url+=(firstParam?"?":"&")+("view"==param?"sview":param)+"="+$location.search()[param],firstParam=!1;return hash&&(url+="#"+hash),url},$scope.renderCalendarEvent=function(){$rootScope.$emit("renderCalendarEvent")},init()}]),calendarModule.controller("CalendarFullUpdatesCtrl",["$scope","$routeParams","$location","$mdToast","CalendarFullUpdatesApi","PaginationModel",function($scope,$routeParams,$location,$mdToast,UpdatesApi,PaginationModel){function init(){if("uorder"in $routeParams&&["ASC","DESC"].indexOf($routeParams.uorder)>=0&&($scope.updateOptions.order=$routeParams.uorder),$routeParams.hasOwnProperty("udetail")&&"false"===$routeParams.udetail||($scope.updateOptions.detail=!0),"utype"in $routeParams&&"published"==$routeParams.utype&&($scope.updateOptions.type="published"),"ufrom"in $routeParams){var from=moment($routeParams.ufrom);from.isValid()&&($scope.updateOptions.fromDateTime=from.toDate())}if("uto"in $routeParams){var to=moment($routeParams.uto);to.isValid()&&($scope.updateOptions.toDateTime=to.toDate())}}$scope.updateResponse={},$scope.updateOptions={order:"DESC",type:"processed",detail:!0};var initialTo=moment().startOf("minute"),initialFrom=moment(initialTo).subtract(7,"days");$scope.updateOptions.toDateTime=initialTo.toDate(),$scope.updateOptions.fromDateTime=initialFrom.toDate(),$scope.pagination=angular.extend({},PaginationModel),$scope.getUpdates=function(resetPagination){resetPagination&&($scope.pagination.currPage=1);var from=moment.parseZone($scope.updateOptions.fromDateTime),to=moment.parseZone($scope.updateOptions.toDateTime);from.isAfter(to)?($scope.invalidRangeToast(),$scope.updateResponse={},$scope.pagination.setTotalItems(0)):from.isValid()&&to.isValid()&&(console.log("Getting updates from",$scope.toZonelessISOString(from),"to",$scope.toZonelessISOString(to)),$scope.loadingUpdates=!0,$scope.updateResponse=UpdatesApi.get({detail:$scope.updateOptions.detail,type:$scope.updateOptions.type,fromDateTime:$scope.toZonelessISOString(from),toDateTime:$scope.toZonelessISOString(to),limit:$scope.pagination.getLimit(),offset:$scope.pagination.getOffset(),order:$scope.updateOptions.order},function(){$scope.loadingUpdates=!1,$scope.updateResponse.success?$scope.pagination.setTotalItems($scope.updateResponse.total):$scope.pagination.setTotalItems(0)},function(){$scope.loadingUpdates=!1}))},$scope.invalidRangeToast=function(){$mdToast.show({template:"<md-toast>from date cannot exceed to date!</md-toast>",parent:angular.element(".error-toast-parent")})},init(),$scope.$watchCollection("updateOptions",function(){$scope.getUpdates(!0);var opts=$scope.updateOptions;$scope.setSearchParam("uorder",opts.order,"ASC"===opts.order);var to=moment(opts.toDateTime).local(),from=moment(opts.fromDateTime).local();$scope.setSearchParam("uto",$scope.toZonelessISOString(to),to.isValid()&&!to.isSame(initialTo)),$scope.setSearchParam("ufrom",$scope.toZonelessISOString(from),from.isValid()&&!from.isSame(initialFrom))}),$scope.$watch("pagination.currPage",function(newPage,oldPage){newPage!==oldPage&&newPage>0&&$scope.getUpdates(!1)})}]);var agendaModule=angular.module("open.agenda",["open.core","open.api"]);agendaModule.controller("AgendaCtrl",["$scope","$rootScope","$routeParams","$location","$route",function($scope,$rootScope,$routeParams,$location,$route){$scope.setHeaderVisible(!0),$scope.selectedView=(parseInt($routeParams.view,10)||0)%3,$scope.viewMap={browse:0,search:1,updates:2},$scope.$watch("selectedView",function(n,o){n!==o&&$location.search().view!==n&&($location.search("view",$scope.selectedView).replace(),$scope.$broadcast("viewChange",$scope.selectedView))}),$scope.$on("$locationChangeSuccess",function(){$scope.selectedView=+$location.search().view||0})}]);var agendaModule=angular.module("open.agenda");agendaModule.controller("AgendaBrowseCtrl",["$scope","$rootScope","$location","$routeParams","$timeout","AgendaMeetingApi",function($scope,$rootScope,$location,$routeParams,$timeout,AgendaMeetingApi){function eventRenderHandler(event,element,view){event.start.getMonth()!==view.start.getMonth()&&(element[0].style.opacity="0.3")}$scope.calendarConfig={},$scope.meetingEventSources=[],$scope.meetings={},$scope.agendaSet={},$scope.yearsFetched={},$scope.loading=!1,$scope.curr={selectedDateTime:null,month:null,year:null},$scope.tabInit=function(){$scope.setHeaderText("Agenda Calendar")},$scope.$on("viewChange",function(){$scope.tabInit()}),$scope.init=function(){$scope.tabInit(),$scope.calendarConfig=$scope.getCalendarConfig(),$scope.curr.selectedDateTime=$routeParams.bdate&&moment($routeParams.bdate).isValid()?moment($routeParams.bdate).toDate():new Date,$scope.curr.month=$scope.curr.selectedDateTime.getMonth(),$scope.curr.year=$scope.curr.selectedDateTime.getFullYear()},$scope.renderCalendar=function(selectedDate){$timeout(function(){selectedDate&&angular.element("#agenda-date-picker").fullCalendar("gotoDate",selectedDate),angular.element("#agenda-date-picker").fullCalendar("render")})},$scope.viewRenderHandler=function(view,element){var month=moment(view.start).month(),year=moment(view.start).year();$scope.yearsFetched.hasOwnProperty(year)||$scope.fetchMeetingEvents(year),$scope.curr.month=month,$scope.curr.year=year},$scope.updateSelectedDate=function(){$scope.curr.selectedDateTime=new Date($scope.curr.year,$scope.curr.month)},$scope.$watch("curr.selectedDateTime",function(newDate){$scope.renderCalendar(newDate)}),$scope.agendaEventClickHandler=function(calEvent){calEvent.agendaId.year&&$location.url($scope.getAgendaUrlFromEvent(calEvent))},$scope.agendaEventMouseOverHandler=function(calEvent,jsEvent,view){calEvent.notes&&calEvent.notes.trim()&&$(jsEvent.target).append("<div class='cal-tooltip agenda-meeting'>"+calEvent.notes+"</div>")},$scope.agendaEventMouseOutHandler=function(calEvent,jsEvent,view){$(".cal-tooltip.agenda-meeting").remove()},$scope.getAgendaUrlFromEvent=function(event){var url=window.ctxPath+"/agendas/"+event.agendaId.year+"/"+event.agendaId.number+"?sview=browse"+(event.committeeId?"&comm="+event.committeeId.name:"");return url},$scope.fetchMeetingEvents=function(year){$scope.yearsFetched[year]=!0,$scope.loading=!0;var meetingResponse=AgendaMeetingApi.get({from:new Date(year,0,1).toISOString(),to:new Date(year+1,0,1).toISOString()},function(){var meetings=meetingResponse.result.items,meetingEvents=[],foundMonths={};angular.forEach(meetings,function(m){var weekOfMoment=moment(m.weekOf);foundMonths[weekOfMoment.month()]=!0,$scope.agendaSet[m.agendaId.year]||($scope.agendaSet[m.agendaId.year]={}),$scope.agendaSet[m.agendaId.year][m.agendaId.number]||(meetingEvents.push({title:"Agenda "+m.agendaId.number+" - "+m.agendaId.year+" (Week of "+weekOfMoment.format("ll")+")",start:m.weekOf,end:weekOfMoment.endOf("week").toISOString(),allDay:!0,agendaId:m.agendaId,color:"#43AC6A",textColor:"white"}),$scope.agendaSet[m.agendaId.year][m.agendaId.number]=!0),meetingEvents.push({title:"\n"+m.committeeId.name+(m.addendum?"\nAddendum: "+m.addendum:""),start:m.meeting.meetingDateTime,allDay:!1,notes:m.meeting.notes,agendaId:m.agendaId,committeeId:m.committeeId})});for(var month=0;12>month;month++)if(!foundMonths.hasOwnProperty(month)){var momentDate=moment([year,month,1]);meetingEvents.push({title:"No committee meetings exist for the month of "+momentDate.format("MMMM")+".",start:momentDate.day("Monday").add(7,"days").format("YYYY-MM-DD"),className:"no-agenda-month"})}$scope.meetingEventSources.push({events:meetingEvents,editable:!1}),$scope.loading=!1},function(){$scope.loading=!1})},$scope.getCalendarConfig=function(){return{editable:!1,theme:!1,header:{left:window.innerWidth>550?"prevYear prev,next nextYear":"prev,next",center:"title",right:"today"},fixedWeekCount:!1,viewRender:$scope.viewRenderHandler,aspectRatio:1.5,hiddenDays:[0,6],timeFormat:"h:mm TT",eventRender:eventRenderHandler,eventClick:$scope.agendaEventClickHandler,eventMouseover:$scope.agendaEventMouseOverHandler,eventMouseout:$scope.agendaEventMouseOutHandler,buttonText:{today:"View Current month"}}},$scope.init()}]);var agendaModule=angular.module("open.agenda");agendaModule.controller("AgendaSearchCtrl",["$scope","$location","$route","$routeParams","PaginationModel","AgendaListingApi","AgendaSearchApi","CommitteeListingApi","YearGenerator",function($scope,$location,$route,$routeParams,PaginationModel,AgendaListingApi,AgendaSearchApi,CommitteeListingApi,YearGenerator){$scope.tabInit=function(){$scope.setHeaderText("Search Agendas")},$scope.pagination=angular.extend({},PaginationModel),$scope.pagination.itemsPerPage=6,$scope.searchParams={year:parseInt($routeParams.year,10)||moment().year(),agendaNo:$routeParams.agendaNo||"",commName:$routeParams.commName||"",printNo:$routeParams.printNo||"",weekOf:$routeParams.weekOf||"",notes:$routeParams.notes||""},$scope.searchParamFields={year:"agenda.id.year",agendaNo:"agenda.id.number",commName:"committee.committeeId.name",printNo:"committee.addenda.items.bills.items.billId.basePrintNo",weekOf:"agenda.weekOf",notes:"committee.addenda.items.meeting.notes"},$scope.searchSort="agenda.id.number:desc",$scope.getWeekOfListing=function(){var weekOfListResponse=AgendaListingApi.get({year:$scope.searchParams.year,limit:100},function(){$scope.weekOfListing=weekOfListResponse.result.items.map(function(a){return a.weekOf})})},$scope.selectedYearChanged=function(){$scope.searchParams.weekOf="",$scope.getWeekOfListing()},$scope.resetSearchParams=function(){for(p in $scope.searchParams)$scope.searchParams.hasOwnProperty(p)&&"year"!==p&&($scope.searchParams[p]="")},$scope.years=YearGenerator.getSingleYearsInt(2009),$scope.agendaNoList=Array.apply(0,Array(25)).map(function(x,i){return i+1});var committees=CommitteeListingApi.get({sessionYear:$scope.searchParams.year},function(){$scope.committeeListing=committees.result.items});$scope.agendaSearch={searched:!1,searching:!1,term:$routeParams.search||"",response:{},results:[],error:!1},$scope.$on("viewChange",function(){$scope.tabInit()});var buildSearch=function(){var queryList=[];for(var p in $scope.searchParams)$scope.searchParams.hasOwnProperty(p)&&($scope.searchParams[p]?(queryList.push("("+$scope.searchParamFields[p]+':"'+$scope.searchParams[p]+'")'),$scope.setSearchParam(p,$scope.searchParams[p])):$scope.setSearchParam(p,$scope.searchParams[p],!1));return queryList.join(" AND ")};$scope.init=function(){$scope.tabInit(),$scope.getWeekOfListing()},$scope.simpleSearch=function(resetPagination){var term=buildSearch();term&&($scope.agendaSearch.searching=!0,$scope.agendaSearch.searched=!1,resetPagination&&$scope.pagination.reset(),$scope.agendaSearch.response=AgendaSearchApi.get({term:term,limit:$scope.pagination.getLimit(),offset:$scope.pagination.getOffset(),sort:$scope.searchSort},function(){$scope.agendaSearch.response&&$scope.agendaSearch.response.success&&($scope.agendaSearch.error=!1,$scope.agendaSearch.results=$scope.agendaSearch.response.result.items||[],$scope.agendaSearch.searched=!0,$scope.agendaSearch.searching=!1,$scope.pagination.setTotalItems($scope.agendaSearch.response.total))},function(data){$scope.agendaSearch.searched=!0,$scope.agendaSearch.searching=!1,$scope.agendaSearch.error=data.data,$scope.agendaSearch.results=[],$scope.pagination.setTotalItems(0),$scope.pagination.reset()}))},$scope.$watch("pagination.currPage",function(newPage,oldPage){newPage!==oldPage&&$scope.simpleSearch(!1)}),$scope.$watchCollection("searchParams",function(n,o){$scope.simpleSearch()}),$scope.init()}]);var agendaModule=angular.module("open.agenda");agendaModule.controller("AgendaUpdatesCtrl",["$scope","$rootScope","$location","$routeParams","PaginationModel","AgendaAggUpdatesApi",function($scope,$rootScope,$location,$routeParams,PaginationModel,AgendaAggUpdatesApi){$scope.pagination=angular.extend({},PaginationModel),$scope.pagination.itemsPerPage=20,$scope.curr={fromDate:moment().subtract(30,"days").startOf("minute").toDate(),toDate:moment().startOf("minute").toDate(),type:$routeParams.type||"published",sortOrder:$routeParams.sortOrder||"DESC",detail:$routeParams.detail||!0},$scope.agendaUpdates={response:{},fetching:!1,result:{},errMsg:""},$scope.tabInit=function(){$scope.setHeaderText("Agenda Updates")},$scope.$on("viewChange",function(){$scope.tabInit()}),$scope.init=function(){$scope.tabInit()},$scope.getUpdates=function(){$scope.agendaUpdates.fetching=!0,$scope.agendaUpdates.response=AgendaAggUpdatesApi.get({from:$scope.curr.fromDate.toISOString(),to:$scope.curr.toDate.toISOString(),type:$scope.curr.type,order:$scope.curr.sortOrder,detail:$scope.curr.detail,filter:$scope.curr.filter,limit:$scope.pagination.getLimit(),offset:$scope.pagination.getOffset()},function(){$scope.agendaUpdates.result=$scope.agendaUpdates.response.result,$scope.pagination.setTotalItems($scope.agendaUpdates.response.total),$scope.agendaUpdates.fetching=!1},function(resp){$scope.agendaUpdates.response.success=!1,$scope.pagination.setTotalItems(0),$scope.agendaUpdates.errMsg=resp.data.message,$scope.agendaUpdates.fetching=!1})},$scope.$on("viewChange",function(ev){$scope.getUpdates()}),$scope.$watchCollection("curr",function(n,o){2===$scope.selectedView&&($scope.getUpdates(),$scope.pagination.reset())}),$scope.$watch("pagination.currPage",function(newPage,oldPage){newPage!==oldPage&&$scope.getUpdates()}),$scope.init()}]);var agendaModule=angular.module("open.agenda");agendaModule.controller("AgendaViewCtrl",["$scope","$location","$routeParams","PaginationModel","AgendaGetApi","AgendaUpdatesApi","$timeout",function($scope,$location,$routeParams,PaginationModel,AgendaGetApi,AgendaUpdatesApi,$timeout){$scope.searchTabName=$scope.viewMap.hasOwnProperty($routeParams.sview)?$routeParams.sview:"browse",$scope.searchTabIdx=$scope.viewMap[$scope.searchTabName],$scope.agenda=null,$scope.year=$routeParams.year,$scope.no=$routeParams.agendaNo,$scope.commName=$routeParams.comm,$scope.selectedComm={},$scope.votes={},$scope.updatesPagination=angular.extend({},PaginationModel),$scope.updates=[],$scope.curr={updateOrder:"desc",fetchedInitialUpdates:!1,loading:!1},$scope.init=function(){$scope.commName&&($scope.selectedComm[$scope.commName.toLowerCase()]=!0),$scope.curr.loading=!0,$scope.response=AgendaGetApi.get({year:$scope.year,agendaNo:$scope.no},function(){$scope.agenda=$scope.response.result,$scope.setHeaderText("Agenda "+$scope.agenda.id.number+" - "+$scope.agenda.id.year),$scope.generateVoteLookup(),$scope.commName&&$timeout(function(){$("html, body").animate({scrollTop:$("md-card[data-committee='"+$scope.commName.toLowerCase()+"']").offset().top})},0),$scope.curr.loading=!1},function(resp){$scope.setHeaderText(resp.status),$scope.response.success=!1,$scope.curr.loading=!1})},$scope.getUpdates=function(intial){intial&&$scope.fetchedInitialUpdates||($scope.updatesResponse=AgendaUpdatesApi.get({agendaNo:$scope.no,year:$scope.year,offset:$scope.updatesPagination.getOffset(),limit:$scope.updatesPagination.getLimit(),order:$scope.curr.updateOrder},function(){$scope.curr.fetchedInitialUpdates=!0,$scope.updatesPagination.setTotalItems($scope.updatesResponse.total)},function(){$scope.updatesPagination.setTotalItems(0)}))},$scope.$watch("updatesPagination.currPage",function(newPage,oldPage){newPage!==oldPage&&$scope.getUpdates()}),$scope.generateVoteLookup=function(){angular.forEach($scope.agenda.committeeAgendas.items,function(commAgenda){angular.forEach(commAgenda.addenda.items,function(commAddendum){commAddendum.hasVotes===!0&&angular.forEach(commAddendum.voteInfo.votesList.items,function(billVote){$scope.votes[billVote.bill.basePrintNo]||($scope.votes[billVote.bill.basePrintNo]={}),$scope.votes[billVote.bill.basePrintNo][commAgenda.committeeId.name]=billVote})})})},$scope.backToSearch=function(){var browseDate=moment($scope.agenda.weekOf).format("YYYY-MM-DD");$location.url(window.ctxPath+"/agendas/?view="+$scope.searchTabIdx+"&bdate="+browseDate)},$scope.init()}]);var agendaModule=angular.module("open.agenda");agendaModule.filter("agendaActionFilter",["$filter",function($filter){return function(input){switch(input){case"FIRST_READING":return"Sent to First Reading";case"THIRD_READING":return"Sent to Third Reading";case"REFERRED_TO_COMMITTEE":return"Referred to Committee";case"DEFEATED":return"Defeated";case"RESTORED_TO_THIRD":return"Restored to Third Reading";case"SPECIAL":return"Special Action"}return"Unknown"}}]);var agendaModule=angular.module("open.agenda");agendaModule.directive("agendaBillListing",["BillUtils",function(BillUtils){return{restrict:"E",scope:{agendaBills:"=",votes:"=",committee:"=",showTitle:"=",showImg:"="},templateUrl:ctxPath+"/partial/content/agenda/agenda-bill-listing-view",controller:function($scope,$element){$scope.billUtils=BillUtils,console.log($scope.agendaBills)}}}]);var lawModule=angular.module("open.law",["open.core","open.api","infinite-scroll"]);lawModule.controller("LawCtrl",["$scope","$location","$routeParams",function($scope,$location,$routeParams){$scope.selectedView=parseInt($routeParams.view,10)||0,$scope.setHeaderText("NYS Laws"),$scope.$watch("selectedView",function(n,o){n!==o&&$location.search().view!==n&&($location.search("view",$scope.selectedView),$scope.$broadcast("viewChange",$scope.selectedView))}),$scope.$on("$locationChangeSuccess",function(){$scope.selectedView=+$location.search().view||0})}]);var lawModule=angular.module("open.law");lawModule.controller("LawSearchCtrl",["$scope","$location","$routeParams","LawListingApi","LawFullSearchApi","PaginationModel","safeHighlights",function($scope,$location,$routeParams,LawListingApi,LawFullSearchApi,PaginationModel,safeHighlights){function tabInit(){$scope.setHeaderVisible(!0)}$scope.lawListingResponse=null,$scope.lawListing=null,$scope.pagination=angular.extend({},PaginationModel),$scope.listingLimit=20,$scope.lawSearch={term:$routeParams.search||"",searching:!1,searched:!1,response:null,error:null,results:[]},$scope.$on("viewChange",function(){tabInit()}),$scope.init=function(){tabInit(),$scope.pagination.currPage=Math.max(parseInt($routeParams.searchPage)||1,1),$scope.simpleSearch(),$scope.getListings()},$scope.getListings=function(){$scope.lawListingResponse&&$scope.lawListingResponse.success||($scope.lawListingResponse=LawListingApi.get({},function(){$scope.lawListing=$scope.lawListingResponse.result.items}))},$scope.keepScrolling=function(){$scope.listingLimit+=10},$scope.simpleSearch=function(resetPagination){var term=$scope.lawSearch.term;$scope.setSearchParam("search",term),term?(resetPagination&&$scope.pagination.reset(),$scope.lawSearch.searched=!1,$scope.lawSearch.searching=!0,$scope.lawSearch.response=LawFullSearchApi.get({term:term,limit:$scope.pagination.getLimit(),offset:$scope.pagination.getOffset()},function(){$scope.lawSearch.response.result&&($scope.lawSearch.results=$scope.lawSearch.response.result.items,safeHighlights($scope.lawSearch.results)),$scope.pagination.setTotalItems($scope.lawSearch.response.total),$scope.lawSearch.searched=!0,$scope.lawSearch.searching=!1,$scope.lawSearch.error=!1},function(error){$scope.pagination.setTotalItems(0),$scope.lawSearch.error=error.data,$scope.lawSearch.searched=!0,$scope.lawSearch.searching=!1})):($scope.pagination.setTotalItems(0),$scope.lawSearch.searched=!0)},$scope.$watch("pagination.currPage",function(newPage,oldPage){newPage!==oldPage&&($scope.setSearchParam("searchPage",newPage),$scope.simpleSearch())}),$scope.init()}]);var lawModule=angular.module("open.law");lawModule.controller("LawUpdatesCtrl",["$scope","$location","$routeParams","PaginationModel","LawFullUpdatesApi",function($scope,$location,$routeParams,PaginationModel,LawFullUpdatesApi){function tabInit(){$scope.setHeaderVisible(!0)}$scope.curr={fromDate:moment().subtract(30,"days").startOf("minute").toDate(),toDate:moment().startOf("minute").toDate(),type:$routeParams.type||"published",sortOrder:$routeParams.sortOrder||"desc",detail:$routeParams.detail||!0},$scope.lawUpdates={response:{},fetching:!1,result:{},errMsg:""},$scope.$on("viewChange",function(){tabInit()}),$scope.pagination=angular.extend({},PaginationModel),$scope.init=function(){tabInit(),$scope.getUpdates()},$scope.getUpdates=function(){$scope.lawUpdates.fetching=!0,$scope.lawUpdates.response=LawFullUpdatesApi.get({from:$scope.curr.fromDate.toISOString(),to:$scope.curr.toDate.toISOString(),type:$scope.curr.type,order:$scope.curr.sortOrder,detail:$scope.curr.detail,filter:$scope.curr.filter,limit:$scope.pagination.getLimit(),offset:$scope.pagination.getOffset()},function(){$scope.lawUpdates.result=$scope.lawUpdates.response.result,$scope.pagination.setTotalItems($scope.lawUpdates.response.total),$scope.lawUpdates.fetching=!1},function(resp){$scope.lawUpdates.response.success=!1,$scope.pagination.setTotalItems(0),$scope.lawUpdates.errMsg=resp.data.message,$scope.lawUpdates.fetching=!1})},$scope.onParamChange=function(){$scope.pagination.reset(),$scope.getUpdates()},$scope.$watch("pagination.currPage",function(newPage,oldPage){newPage!==oldPage&&$scope.getUpdates()}),$scope.init()}]);var lawModule=angular.module("open.law");lawModule.controller("LawViewCtrl",["$scope","$q","$routeParams","$location","$route","$timeout","$anchorScroll","PaginationModel","$sce","$mdToast","LawTreeApi","LawDocApi","LawVolumeSearchApi","LawVolumeUpdatesApi",function($scope,$q,$routeParams,$location,$route,$timeout,$anchorScroll,PaginationModel,$sce,$mdToast,LawTreeApi,LawDocApi,LawVolumeSearchApi,LawVolumeUpdatesApi){$scope.setHeaderVisible(!0),$scope.curr={lawId:$routeParams.lawId,lawRoot:null,lawTree:null,lawDocs:{},expanded:{},showDoc:{},showNested:{},lawText:{},updateOrder:"desc",fetchedInitialUpdates:!1},$scope.updatesPagination=angular.extend({},PaginationModel),$scope.updates=[],$scope.loading=!1,$scope.listingLimit=10,$scope.init=function(){$scope.selectedView=1,$scope.loading=!0,$scope.lawTreeResponse=LawTreeApi.get({lawId:$scope.curr.lawId},function(){$scope.curr.lawRoot=$scope.lawTreeResponse.result,$scope.curr.lawTree=$scope.curr.lawRoot.documents.documents.items,$scope.curr.lawTree.length||($scope.curr.showDoc[$scope.curr.lawRoot.documents.locationId]=!0),$scope.fetchLawDoc($scope.curr.lawRoot.documents),$scope.setHeaderText($scope.curr.lawRoot.info.name+" Law"),$routeParams.location||($scope.loading=!1),$timeout(function(){$routeParams.location&&$scope.navigateToLawDoc({locationId:$routeParams.location})})})},$scope.fetchLawDoc=function(node){var deferred=$q.defer();if($scope.curr.lawDocs[node.locationId])deferred.resolve($scope.curr.lawDocs[node.locationId]);else var lawDocResponse=LawDocApi.get({lawId:$scope.curr.lawId,docId:node.locationId},function(){var lawText=lawDocResponse.result.text.replace(/\\n\s{2}/g,"<br/><br/>&nbsp;&nbsp;").replace(node.title+".","<strong>$&</strong><br/>&nbsp;&nbsp;").replace(/\\n/g," ");$scope.curr.lawDocs[node.locationId]=lawDocResponse.result,$scope.curr.lawText[node.locationId]=$sce.trustAsHtml(lawText),deferred.resolve(lawDocResponse.result)});return deferred.promise},$scope.getUpdates=function(intial){intial&&$scope.fetchedInitialUpdates||($scope.updatesResponse=LawVolumeUpdatesApi.get({lawId:$scope.curr.lawId,offset:$scope.updatesPagination.getOffset(),limit:$scope.updatesPagination.getLimit(),order:$scope.curr.updateOrder},function(){$scope.curr.fetchedInitialUpdates=!0,$scope.updatesPagination.setTotalItems($scope.updatesResponse.total)},function(){$scope.updatesPagination.setTotalItems(0)}))},$scope.$watch("updatesPagination.currPage",function(newPage,oldPage){newPage!==oldPage&&$scope.getUpdates()}),$scope.navigateToLawDoc=function(node,callback){$scope.loading=!0;var lawDocResult=$scope.fetchLawDoc(node);lawDocResult.then(function(doc){var locationsToPath=doc.parentLocationIds.slice(0);locationsToPath.shift(),locationsToPath.push(node.locationId);for(var i=0;i<$scope.curr.lawTree.length;i++)if($scope.curr.lawTree[i].locationId===locationsToPath[0]){locationsToPath.shift(),$scope.expandNodesBelow($scope.curr.lawTree[i],locationsToPath);break}$scope.listingLimit=1e3,$timeout(function(){$scope.setSearchParam("location",node.locationId),$location.hash(node.locationId),$scope.loading=!1,$anchorScroll(),callback&&callback()})})},$scope.toggleLawNode=function(node){var show=!$scope.curr.showNested[node.locationId];$scope.curr.showNested[node.locationId]=show,"SECTION"===node.docType&&show&&!$scope.curr.lawText[node.locationId]&&$scope.fetchLawDoc(node)},$scope.setLink=function(locationId){$location.search("location",locationId).replace()},$scope.toggleNodeText=function(node){var show=!$scope.curr.showDoc[node.locationId];$scope.curr.showDoc[node.locationId]=show,show&&!$scope.curr.lawText[node.locationId]&&$scope.fetchLawDoc(node)},$scope.getFilterResults=function(filterText){var deferred=$q.defer(),term="docLevelId:"+filterText+"* OR docLevelId:"+filterText,response=LawVolumeSearchApi.get({lawId:$scope.curr.lawId,term:term,limit:20,sort:"_score:desc,docLevelId:asc"},function(){deferred.resolve(response.result.items)},function(){deferred.resolve([])});return deferred.promise},$scope.expandNodesBelow=function(node,filterList){$scope.curr.expanded[node.locationId]=!0,$scope.curr.showNested[node.locationId]=!0,"SECTION"!==node.docType||filterList&&filterList[0]!==node.locationId||$scope.curr.lawText[node.locationId]||$scope.fetchLawDoc(node),angular.forEach(node.documents.items,function(childNode){filterList&&childNode.locationId!==filterList[0]||(filterList&&filterList.shift(),$scope.expandNodesBelow(childNode,filterList))})},$scope.collapseNodesBelow=function(node){return $scope.curr.expanded[node.locationId]=!1,$scope.curr.showNested[node.locationId]=!1,"SECTION"===node.docType?!1:void angular.forEach(node.documents.items,function(childNode){$scope.collapseNodesBelow(childNode)})},$scope.setNode=function(node,depth){$scope.curr.nodes[depth]=node,$timeout(function(){$anchorScroll()},200)},$scope.keepScrolling=function(){$scope.listingLimit+=15},$scope.backToListings=function(){$location.path(ctxPath+"/laws")},$scope.init()}]);var transcriptModule=angular.module("open.transcript",["open.core","open.api"]);transcriptModule.controller("TranscriptCtrl",["$scope","$routeParams",function($scope,$routeParams){$scope.view=0,$scope.init=function(){$scope.setHeaderVisible(!0),$scope.setHeaderText("Transcripts")},$scope.init()}]);var transcriptModule=angular.module("open.transcript");transcriptModule.controller("TranscriptSearchCtrl",["$scope","$sce","$routeParams","$location","PaginationModel","TranscriptSearchApi","PublicHearingSearchApi","YearGenerator",function($scope,$sce,$routeParams,$location,PaginationModel,TranscriptSearchApi,PublicHearingSearchApi,YearGenerator){$scope.years=YearGenerator.getSingleYearsStr(1993,moment().year()).reverse(),$scope.transcriptSearch={term:$routeParams.term||"",state:"initial",year:$routeParams.year||"",type:$routeParams.txtype||"session",response:{},matches:[],error:!1,paginate:angular.extend({},PaginationModel)};var sessionIsSelected=function(){return"session"==$scope.transcriptSearch.type};$scope.init=function(){$scope.transcriptSearch.paginate.itemsPerPage=25,$scope.transcriptSearch.paginate.currPage=$routeParams.page||1;var resetPagination=!$scope.transcriptSearch.paginate.currPage>1;$scope.search(resetPagination)},$scope.search=function(resetPagination){resetPagination&&$scope.transcriptSearch.paginate.reset(),$scope.setParams();var term=$scope.transcriptSearch.term||"*";$scope.transcriptSearch.state="searching";var searchApi=sessionIsSelected()?TranscriptSearchApi:PublicHearingSearchApi;$scope.transcriptSearch.response=searchApi.get({term:term,year:$scope.transcriptSearch.year,limit:$scope.transcriptSearch.paginate.getLimit(),offset:$scope.transcriptSearch.paginate.getOffset()},function(){$scope.transcriptSearch.response&&$scope.transcriptSearch.response.success?($scope.transcriptSearch.error=!1,$scope.transcriptSearch.matches=$scope.transcriptSearch.response.result.items||[],$scope.transcriptSearch.paginate.setTotalItems($scope.transcriptSearch.response.total),angular.forEach($scope.transcriptSearch.matches,function(match){for(var field in match.highlights)for(var fragment in match.highlights[field])match.highlights[field][fragment]&&(match.highlights.hasFields=!0,match.highlights[field][fragment]=$sce.trustAsHtml(match.highlights[field][fragment]))}),$scope.transcriptSearch.state="searched"):($scope.transcriptSearch.error=!0,$scope.transcriptSearch.matches=[],$scope.transcriptSearch.paginate.setTotalItems($scope.transcriptSearch.response.total),$scope.transcriptSearch.state="searched")})},$scope.changePage=function(newPageNumber){$scope.search(!1)},$scope.setParams=function(){$scope.setSearchParam("term",$scope.transcriptSearch.term),$scope.setSearchParam("txtype",$scope.transcriptSearch.type),$scope.setSearchParam("year",$scope.transcriptSearch.year),
$scope.setSearchParam("page",$scope.transcriptSearch.paginate.currPage)},$scope.init()}]);var transcriptModule=angular.module("open.transcript");transcriptModule.controller("HearingTranscriptViewCtrl",["$scope","$routeParams","$location","$filter","PublicHearingDetailsApi",function($scope,$routeParams,$location,$filter,PublicHearingDetailsApi){$scope.setHeaderVisible(!0),$scope.init=function(){$scope.hearingDetailViewResponse&&$scope.hearingDetailViewResponse.success||($scope.hearingDetailViewResponse=PublicHearingDetailsApi.get({filename:$routeParams.filename},function(){$scope.hearingDetails=$scope.hearingDetailViewResponse.result,$scope.setHeaderText("Public Hearing Transcript: "+$filter("date")($scope.hearingDetails.date,"mediumDate"))}))},$scope.init(),$scope.back=function(){$location.path(ctxPath+"/transcripts")}}]);var transcriptModule=angular.module("open.transcript");transcriptModule.controller("SessionTranscriptViewCtrl",["$scope","$routeParams","$location","$filter","SessionTranscriptDetailsApi",function($scope,$routeParams,$location,$filter,SessionTranscriptDetailsApi){$scope.setHeaderVisible(!0),$scope.init=function(){$scope.transcriptDetailViewResponse&&$scope.transcriptDetailViewResponse.success||($scope.transcriptDetailViewResponse=SessionTranscriptDetailsApi.get({filename:$routeParams.filename},function(){$scope.sessionTranscriptDetails=$scope.transcriptDetailViewResponse.result,$scope.setHeaderText("Session Transcript: "+$filter("date")($scope.sessionTranscriptDetails.dateTime,"mediumDate"))}))},$scope.init(),$scope.back=function(){$location.path(ctxPath+"/transcripts")}}]);var spotcheckModule=angular.module("open.spotcheck",["open.core","smart-table","diff-match-patch"]);spotcheckModule.factory("SpotcheckSummaryAPI",["$resource",function($resource){return $resource(adminApiPath+"/spotcheck/summaries/:startDate/:endDate",{startDate:"@startDate",endDate:"@endDate"})}]),spotcheckModule.factory("SpotcheckDetailAPI",["$resource",function($resource){return $resource(adminApiPath+"/spotcheck/:reportType/:reportDateTime",{reportType:"@reportType",reportDateTime:"@reportDateTime"})}]),spotcheckModule.factory("SpotcheckOpenMismatchAPI",["$resource",function($resource){return $resource(adminApiPath+"/spotcheck/open-mismatches")}]),spotcheckModule.factory("SpotcheckOpenMismatchSummaryAPI",["$resource",function($resource){return $resource(adminApiPath+"/spotcheck/open-mismatches/summary")}]),spotcheckModule.factory("SpotcheckMismatchIgnoreAPI",["$resource",function($resource){return $resource(adminApiPath+"/spotcheck/mismatch/:mismatchId/ignore",{mismatchId:"@mismatchId",ignoreLevel:"@ignoreLevel"})}]),spotcheckModule.factory("SpotcheckMismatchTrackingAPI",["$resource",function($resource){return $resource(adminApiPath+"/spotcheck/mismatch/:mismatchId/issue/:issueId",{mismatchId:"@mismatchId",issueId:"@issueId"})}]);var reportTypeMap={},reportTypeDispMap={},mismatchTypeMap={};spotcheckModule.filter("mismatchStatusLabel",["$filter",function($filter){var statusLabelMap={all:"All",RESOLVED:"Closed",NEW:"New",EXISTING:"Existing",REGRESSION:"Reopened",IGNORE:"Ignored"};return function(status){return $filter("label")(status,statusLabelMap)}}]),spotcheckModule.filter("mismatchTypeLabel",["$filter",function($filter){return function(type){return"all"===type?"All":$filter("label")(type,mismatchTypeMap)}}]),spotcheckModule.filter("reportTypeRefName",["$filter",function($filter){return function(type){return $filter("label")(type,reportTypeMap)}}]),spotcheckModule.filter("reportTypeLabel",["$filter",function($filter){return function(type){return $filter("label")(type,reportTypeDispMap)}}]),spotcheckModule.filter("reportType",function(){return function(type){for(var key in reportTypeMap)if(reportTypeMap.hasOwnProperty(key)&&(type===key||type===reportTypeMap[key]))return key;return null}}),spotcheckModule.filter("contentType",function(){var contentTypeMap={LBDC_AGENDA_ALERT:"Agenda",LBDC_DAYBREAK:"Bill",LBDC_CALENDAR_ALERT:"Floor Cal",LBDC_SCRAPED_BILL:"Bill",SENATE_SITE_BILLS:"Bill"};return function(reportType){return contentTypeMap.hasOwnProperty(reportType)?contentTypeMap[reportType]:"Content"}}),spotcheckModule.filter("reportDataProvider",function(){var defaultDataProvider="Openleg";return function(refType){return defaultDataProvider}}),spotcheckModule.filter("reportReferenceProvider",function(){var refProviderMap={LBDC_DAYBREAK:"LBDC",LBDC_SCRAPED_BILL:"LBDC",SENATE_SITE_BILLS:"Nysenate.gov",LBDC_AGENDA_ALERT:"LBDC",LBDC_CALENDAR_ALERT:"LBDC"};return function(refType){return refProviderMap.hasOwnProperty(refType)?refProviderMap[refType]:"unknown provider of ["+refType+"]"}}),spotcheckModule.filter("refTypeLabel",function(){var refTypeLabelMap={LBDC_DAYBREAK:"Daybreak report",LBDC_SCRAPED_BILL:"scraped bill",SENATE_SITE_BILLS:"node dump",LBDC_AGENDA_ALERT:"alert",LBDC_CALENDAR_ALERT:"alert"};return function(refType){return refTypeLabelMap.hasOwnProperty(refType)?refTypeLabelMap[refType]:"'"+refType+"'?!"}}),spotcheckModule.filter("contentUrl",function(){function getBaseBillUrl(key){return ctxPath+"/bills/"+key.session.year+"/"+key.basePrintNo}function getBillAmendmentUrl(key){return getBaseBillUrl(key)+"?version="+key.version}function getAgendaUrl(key){return key.agendaId.year>0?ctxPath+"/agendas/"+key.agendaId.year+"/"+key.agendaId.number+"?comm="+key.committeeId.name:-1==key.agendaId.year?"http://open.nysenate.gov/legislation/meeting/"+key.committeeId.name.replace(/[ ,]+/g,"-")+"-"+moment(key.agendaId.number).format("MM-DD-YYYY"):""}function getCalendarUrl(key){return ctxPath+"/calendars/"+key.year+"/"+key.calNo}var contentTypeUrlMap={LBDC_DAYBREAK:getBaseBillUrl,LBDC_SCRAPED_BILL:getBaseBillUrl,SENATE_SITE_BILLS:getBillAmendmentUrl,LBDC_AGENDA_ALERT:getAgendaUrl,LBDC_CALENDAR_ALERT:getCalendarUrl};return function(key,reportType){return contentTypeUrlMap.hasOwnProperty(reportType)?contentTypeUrlMap[reportType](key):""}}),spotcheckModule.filter("contentId",function(){function getBaseBillId(key){return key.basePrintNo}function getBillId(key){return key.printNo}function getAgendaId(key){var commNameAndAddendum=" "+key.committeeId.name+("DEFAULT"!==key.addendum?"-"+key.addendum:"");if(key.agendaId.year>0)return key.agendaId.year+"-"+key.agendaId.number+commNameAndAddendum;var dateString=moment(key.agendaId.number).format("l");return dateString+commNameAndAddendum}function getCalendarId(key){return key.calNo+", "+key.year}var contentTypeIdMap={LBDC_DAYBREAK:getBaseBillId,LBDC_SCRAPED_BILL:getBaseBillId,SENATE_SITE_BILLS:getBillId,LBDC_AGENDA_ALERT:getAgendaId,LBDC_CALENDAR_ALERT:getCalendarId};return function(key,reportType){return contentTypeIdMap.hasOwnProperty(reportType)?contentTypeIdMap[reportType](key):reportType+"?!"}}),spotcheckModule.factory("SpotcheckDefaultFilter",function(){function passes(arg1,type,ignoreStatus,trackedStatus){return"object"==typeof arg1?this.filterFunction(arg1.status,arg1.mismatch.mismatchType,arg1.mismatch.ignoreStatus,arg1.mismatch.issueIds.size>0):this.filterFunction(arg1,type,ignoreStatus,trackedStatus)}function isWildcard(field){return field===!0||"all"===field}function filterFunction(status,type,ignoreStatus,trackedStatus){var ignored=ignoreStatus===!0||ignoreStatus&&"NOT_IGNORED"!==ignoreStatus,tracked=trackedStatus===!0||"TRACKED"===trackedStatus;return(isWildcard(status)||this.statuses[status]===!0)&&(isWildcard(type)||this.types[type]===!0)&&(this.ignoredShown||!ignored)&&(!this.ignoredOnly||ignored)&&(this.trackedShown||!tracked)&&(this.untrackedShown||tracked)}return{passes:passes,filterFunction:filterFunction,orderBy:"OBSERVED_DATE",sortOrder:"DESC",limit:10,offset:1,statuses:{},types:{},ignoredShown:!1,ignoredOnly:!1,trackedShown:!0,untrackedShown:!0}}),spotcheckModule.factory("IgnoreStatuses",function(){return{NOT_IGNORED:"Not Ignored",IGNORE_PERMANENTLY:"Ignore Permanently",IGNORE_UNTIL_RESOLVED:"Ignore Until Resolved",IGNORE_ONCE:"Ignore Once"}}),spotcheckModule.filter("ignoreLabel",["IgnoreStatuses",function(ignoreStatuses){return function(ignoreStatus){return ignoreStatuses[ignoreStatus]}}]),spotcheckModule.filter("mismatchCount",function(){return function(summary,filter,wildcardFields){if(!summary||!summary.mismatchCounts)return console.log("attempt to extract count from invalid summary",summary),"!?";if(filter&&filter.hasOwnProperty("passes")){"object"!=typeof wildcardFields&&(wildcardFields=[wildcardFields]);for(var field in wildcardFields)if("status"===field);else if("type"===field);else if("ignored"===field);else if("tracked"===field);}else{var simpleFilter=!0;angular.forEach(filter,function(value,field){"all"===value&&delete filter[field]})}var totalCount=0;return angular.forEach(summary.mismatchCounts,function(statusCounts,type){angular.forEach(statusCounts,function(ignoredCounts,status){angular.forEach(ignoredCounts,function(trackedCounts,ignoreStatus){angular.forEach(trackedCounts,function(count,trackedStatus){if(simpleFilter){if("type"in filter&&filter.type!==type||"status"in filter&&filter.status!==status||"ignored"in filter&&filter.ignored!==("NOT_IGNORED"!==ignoreStatus)||"tracked"in filter&&filter.tracked!==("TRACKED"===trackedStatus))return}else if(!filter.passes(status,type,ignoreStatus,trackedStatus))return;totalCount+=count})})})}),totalCount}}),spotcheckModule.filter("hasIgnoredMismatches",["$filter",function($filter){return function(summary,filter){return filter=angular.copy(filter),filter.ignored=!0,$filter("mismatchCount")(summary,filter)>0}}]),spotcheckModule.controller("SpotcheckCtrl",["$scope","$routeParams","$location","$timeout","$filter","$mdDialog",function($scope,$routeParams,$location,$timeout,$filter,$mdDialog){$scope.rtmap={},$scope.rtDispMap={},$scope.mtmap={},$scope.init=function(rtmap,rtDispMap,mtmap){$scope.rtmap=reportTypeMap=rtmap,$scope.rtDispMap=reportTypeDispMap=rtDispMap,$scope.mtmap=mismatchTypeMap=mtmap,$scope.setHeaderVisible(!0),$scope.setHeaderText("View Spotcheck Reports")},$scope.getReportURL=function(reportType,reportRunTime){return ctxPath+"/admin/report/spotcheck/"+$filter("reportTypeRefName")(reportType)+"/"+$filter("moment")(reportRunTime,"YYYY-MM-DD[T]HH:mm:ss.SSS")},$scope.getContentId=function(reportType,key){return $filter("contentId")(key,reportType)},$scope.getContentUrl=function(reportType,key){return $filter("contentUrl")(key,reportType)},$scope.findFirstOpenedDates=function(mismatch,observation){if("NEW"==mismatch.status)return{reportDateTime:observation.reportDateTime,referenceDateTime:observation.refDateTime};for(var index in mismatch.prior.items)if("NEW"==mismatch.prior.items[index].status)return{reportDateTime:mismatch.prior.items[index].reportId.reportDateTime,referenceDateTime:mismatch.prior.items[index].reportId.referenceDateTime};return{reportDateTime:"Unknown",referenceDateTime:"Unknown"}},$scope.getMismatchId=function(observation,mismatch){return JSON.stringify(observation.key)+"-"+mismatch.mismatchType},$scope.extractMismatchRows=function(observations,refType){var mismatchRows=[];return angular.forEach(observations,function(obs){angular.forEach(obs.mismatches.items,function(m){var chips=[];m.ignoreStatus&&"NOT_IGNORED"!==m.ignoreStatus&&chips.push(m.ignoreStatus),angular.forEach(m.issueIds.items,function(issueId){chips.push(issueId)}),mismatchRows.push({key:obs.key,keyString:$scope.getContentId(refType,obs.key),observation:obs,mismatch:m,type:m.mismatchType,status:m.status,observed:obs.observedDateTime,reportDateTime:obs.reportDateTime,firstOpened:$scope.findFirstOpenedDates(m,obs).reportDateTime,refData:m.referenceData,obsData:m.observedData,mismatchId:$scope.getMismatchId(obs,m),refType:refType,chips:chips})})}),mismatchRows},$scope.showSummaryDetails=function(summary){$scope.notImplementedDialog()}}]),spotcheckModule.directive("mismatchDiff",["$timeout",function($timeout){return{restrict:"E",scope:{left:"=",right:"="},template:"<span ng-class='{preformatted: pre, \"word-wrap\": !pre}' style='line-height: {{lineHeight}}px'><line-numbers ng-if='pre && showLines' line-end='lines'></line-numbers><semantic-diff left-obj='left' right-obj='right'></semantic-diff></span></span>",link:function($scope,$element,$attrs){$scope.pre=!$attrs.hasOwnProperty("noPre"),$scope.wrap=!$attrs.hasOwnProperty("noWrap"),$scope.showLines="false"!==$attrs.showLines,$scope.lines=1,$scope.lineHeight=20,$scope.adjustLineCount=function(){$scope.pre||$attrs.hasOwnProperty("noPre")||($scope.pre=$scope.left.split(/\n/).length>1||$scope.right.split(/\n/).length>1),$scope.pre&&$scope.showLines&&$timeout(function(){var childElement=$element.children()[0],elementHeight=childElement.offsetHeight;$scope.lines=Math.ceil(elementHeight/$scope.lineHeight),$scope.pre=$scope.lines>1},100)},$scope.$watchGroup(["left","right"],$scope.adjustLineCount)}}}]),spotcheckModule.directive("diffSummary",function(){return{restrict:"E",scope:{fullDiff:"="},template:"<div ng-repeat='diff in selectedDiffs'><span class='diff-summary-header'>Lines {{diff.startLineNum}} to {{diff.endLineNum}}:<br></span><div class='preformatted'><line-numbers line-start='diff.startLineNum' line-end='diff.endLineNum'></line-numbers><span ng-bind='diff.startText'></span><span ng-repeat='seg in diff.segments'><span ng-if='seg.operation === \"EQUAL\"' ng-bind='seg.text'></span><ins ng-if='seg.operation === \"INSERT\"' ng-bind='seg.text'></ins><del ng-if='seg.operation === \"DELETE\"' ng-bind='seg.text'></del></span><span ng-bind='diff.endText'></span></div><br ng-if='!$last'><br ng-if='!$last'><md-divider ng-if='!$last'></md-divider></div>",link:function($scope,$element,$attrs){$scope.selectedDiffs=[],$scope.$watch("selectedDiffs",function(){console.log($scope.selectedDiffs)},!0);var currentLineNum=1,currentLineText="",currentDiff=null;for(var iSeg in $scope.fullDiff){var segment=$scope.fullDiff[iSeg],segLines=segment.text.split(/\n/);["DELETE","INSERT"].indexOf(segment.operation)>=0?(null==currentDiff&&(currentDiff={startText:currentLineText,startLineNum:currentLineNum,segments:[]}),currentDiff.segments.push(segment)):(null!=currentDiff&&(segLines.length>2?(currentDiff.endText=segLines[0],currentDiff.endLineNum=currentLineNum,$scope.selectedDiffs.push(currentDiff),currentDiff=null):currentDiff.segments.push(segment)),currentLineText=segLines.length>1?segLines[segLines.length-1]:currentLineText+segLines[0]),currentLineNum+=segLines.length-1}null!=currentDiff&&(currentDiff.endText="",currentDiff.endLineNum=currentLineNum,$scope.selectedDiffs.push(currentDiff)),$scope.singleLine=function(diff){return diff.startLineNum==diff.endLineNum}}}}),angular.module("open.spotcheck").controller("detailDialogCtrl",["$scope","$mdDialog","mismatchRow",function($scope,$mdDialog,mismatchRow){function setDefaultTextOptions(mismatchType){var nonAlphaMismatches=["BILL_TEXT_LINE_OFFSET","BILL_TEXT_CONTENT"],noLinePageNumMismatches=["BILL_TEXT_CONTENT"];nonAlphaMismatches.indexOf(mismatchType)>-1&&($scope.textControls.whitespace="stripNonAlpha"),noLinePageNumMismatches.indexOf(mismatchType)>-1&&($scope.textControls.removeLinePageNums=!0)}function removeLinePageNumbers(text){return text.replace(pageLineNumRegex,"").replace(/\n+/,"\n")}function init(){$scope.newDetails(mismatchRow)}$scope.iDiffTab=0,$scope.reportType=mismatchRow.refType,$scope.newDetails=function(newMismatchRow){$scope.mismatchRow=newMismatchRow,console.log("loading detail dialog for",newMismatchRow),$scope.observation=newMismatchRow.observation,$scope.currentMismatch=newMismatchRow.mismatch,$scope.allMismatches=newMismatchRow.observation.mismatches.items,setDefaultTextOptions(newMismatchRow.type),$scope.formatDisplayData()},$scope.$watchGroup(["referenceData","displayData"],function(){$scope.obsMultiLine=$scope.observedData&&$scope.observedData.indexOf("\n")>-1,$scope.refMultiLine=$scope.referenceData&&$scope.referenceData.indexOf("\n")>-1,$scope.multiLine=$scope.obsMultiLine||$scope.refMultiLine}),$scope.cancel=function(){$mdDialog.hide()},$scope.whitespaceOptions={initial:"No Formatting",normalize:"Normalize Whitespace",stripNonAlpha:"Strip Non-Alphanumeric"},$scope.textControls={whitespace:"initial",capitalize:!1,removeLinePageNums:!1};var lineNumberRegex=/^( {4}\d| {3}\d\d)/,pageNumberRegex=/^ {7}[A|S]\. \d+(--[A-Z])?[ ]+\d+([ ]+[A|S]\. \d+(--[A-Z])?)?$/,budgetPageNumberRegex=/^[ ]{42,43}\d+[ ]+\d+-\d+-\d+$/,explanationRegex=/^[ ]+EXPLANATION--Matter in ITALICS \(underscored\) is new; matter in brackets\n/,explanationRegex2=/^[ ]+\[ ] is old law to be omitted.\n[ ]+LBD\d+-\d+-\d+$/,pageLineNumRegex=new RegExp("(?:"+[lineNumberRegex.source,pageNumberRegex.source,budgetPageNumberRegex.source,explanationRegex.source,explanationRegex2.source].join(")|(?:")+")","gm");$scope.formatDisplayData=function(){var texts=[$scope.currentMismatch.referenceData,$scope.currentMismatch.observedData];switch($scope.textControls.removeLinePageNums&&(texts=texts.map(removeLinePageNumbers)),$scope.textControls.whitespace){case"stripNonAlpha":texts=texts.map(function(text){return text.replace(/(?:[^\w]|_)+/g,"")});break;case"normalize":texts=texts.map(function(text){return text.replace(/[ ]+/g," ")}),texts=texts.map(function(text){return text.replace(/^[ ]+|[ ]+$/gm,"")})}$scope.textControls.capitalize&&(texts=texts.map(function(text){return text.toUpperCase()})),$scope.referenceData=texts[0],$scope.observedData=texts[1]},init()}]),angular.module("open.spotcheck").controller("SpotcheckSummaryCtrl",["$scope","$filter","$routeParams","$location","SpotcheckSummaryAPI",function($scope,$filter,$routeParams,$location,SpotcheckSummaryAPI){$scope.reportSummaries=[],$scope.filteredReportSummaries=[],$scope.dataProvider=[],$scope.response=null,$scope.loadingSummaries=!1,$scope.summariesNotFound=!1,$scope.showErrorlessReports=!1,$scope.resultsPerPage=20,$scope.params={summaryType:"LBDC_DAYBREAK",inputStartDate:null,inputEndDate:null},$scope.pagination={currPage:1,itemsPerPage:10},$scope.init=function(){"type"in $routeParams&&($scope.params.summaryType=$filter("reportType")($routeParams.type)||"all"),$routeParams.hasOwnProperty("endDate")&&moment($routeParams.endDate).isValid()?$scope.endDate=moment($routeParams.endDate):$scope.endDate=moment(),$routeParams.hasOwnProperty("startDate")&&moment($routeParams.startDate).isValid()?$scope.startDate=moment($routeParams.startDate):$scope.startDate=moment($scope.endDate).subtract(3,"months"),$scope.params.inputStartDate=moment($scope.startDate).toDate(),$scope.params.inputEndDate=moment($scope.endDate).toDate()},$scope.getSummaries=function(){console.log("getting new summaries");var summaryType="all"!==$scope.params.summaryType?$filter("reportTypeRefName")($scope.params.summaryType):[];$scope.loadingSummaries=!0,$scope.response=SpotcheckSummaryAPI.get({startDate:$scope.startDate.format(),endDate:$scope.endDate.endOf("day").format(),reportType:summaryType},function(){$scope.response.success&&($scope.reportSummaries=$scope.response.reports.items,console.log("summaries received"),$scope.setSummarySearchParams(),$scope.loadingSummaries=!1,$scope.summariesNotFound=!1,$scope.filterSummaries())},function(response){console.log(response),$scope.loadingSummaries=!1,$scope.summariesNotFound=!0})},$scope.$watchCollection("params",function(){$scope.endDate=moment($scope.params.inputEndDate),$scope.startDate=moment($scope.params.inputStartDate),$scope.getSummaries()}),$scope.setSummarySearchParams=function(){$scope.clearSearchParams(),$scope.setSearchParam("type",$filter("reportTypeRefName")($scope.params.summaryType),"all"!==$scope.params.summaryType)},$scope.computeMismatchCount=function(summaryItem,type){var defaultFilter=$filter("default"),mismatchType=summaryItem.mismatchTypes[type];return mismatchType?defaultFilter(mismatchType.NEW,0)+defaultFilter(mismatchType.EXISTING,0)+defaultFilter(mismatchType.REGRESSION,0):0},$scope.computeMismatchDiff=function(summaryItem,type,abs){var defaultFilter=$filter("default"),mismatchType=summaryItem.mismatchTypes[type];if(!mismatchType)return 0;var diff=defaultFilter(mismatchType.NEW,0)+defaultFilter(mismatchType.REGRESSION,0)-defaultFilter(mismatchType.RESOLVED,0);return abs?Math.abs(diff):diff},$scope.mismatchDiffClass=function(summaryItem,type){var val=$scope.computeMismatchDiff(summaryItem,type,!1);return val>0?"postfix-icon icon-arrow-up4 new-error":0>val?"postfix-icon icon-arrow-down5 closed-error":"postfix-icon icon-minus3 existing-error"},$scope.noErrorFilter=function(row){return $scope.showErrorlessReports||row.openMismatches>0},$scope.filterSummaries=function(){$scope.filteredReportSummaries=$scope.reportSummaries.filter($scope.noErrorFilter)},$scope.$watch("showErrorlessReports",$scope.filterSummaries),$scope.init()}]),angular.module("open.spotcheck").controller("SpotcheckReportCtrl",["$scope","$element","$filter","$location","$timeout","$routeParams","$rootScope","SpotcheckDetailAPI","SpotcheckDefaultFilter",function($scope,$element,$filter,$location,$timeout,$routeParams,$rootScope,SpotcheckDetailAPI,defaultFilter){function filterMismatches(){var filtered=$filter("filter")($scope.state.mismatches,function(mismatch){return $scope.state.filter.passes(mismatch)}),ordered=$filter("orderBy")(filtered,getOrderByField(),"DESC"===$scope.state.filter.sortOrder);$scope.state.filteredMismatches=$filter("limitTo")(ordered,$scope.state.filter.limit,$scope.state.filter.offset-1),console.log("limited",$scope.state.filter.limit,$scope.state.filter.offset,$scope.state.filteredMismatches)}function getOrderByField(){return orderByFields.hasOwnProperty($scope.state.filter.orderBy)?orderByFields[$scope.state.filter.orderBy]:"!?"}$scope.state={loadingReport:!1,mismatches:[],filteredMismatches:[],filter:angular.copy(defaultFilter),summary:null,report:null,dataDetails:null},$scope.init=function(){$routeParams.hasOwnProperty("runTime")&&$routeParams.hasOwnProperty("type")&&($scope.state.reportType=$routeParams.type,$scope.state.reportDateTime=$routeParams.runTime,$scope.getReportDetails())},$scope.getReportDetails=function(){SpotcheckDetailAPI.get({reportType:$scope.state.reportType,reportDateTime:$scope.state.reportDateTime},function(response){$scope.state.report=response.details,$scope.state.referenceDateTime=$scope.state.report.referenceDateTime,$scope.state.reportType=$scope.state.report.referenceType,$scope.extractTableData(),$scope.state.summary={mismatchStatuses:$scope.state.report.mismatchStatuses,mismatchCounts:$scope.state.report.mismatchCounts},$timeout(filterMismatches),$scope.state.loadingReport=!1,console.log("report detail received:",$scope.state.report.referenceType,$scope.state.report.referenceDateTime)}),$scope.state.loadingReport=!0,console.log("new report detail requested: ",$scope.state.reportType,$scope.state.reportDateTime)},$scope.extractTableData=function(){$scope.state.mismatches=$scope.extractMismatchRows($scope.state.report.observations,$scope.state.reportType),angular.forEach($scope.tableData,function(row){$scope.state.dataDetails[row.mismatchId]=row})},$scope.getMismatchDetails=function(mismatchId){return $scope.state.dataDetails[mismatchId]},$scope.openDetailWindow=function(mismatchRow){$scope.showMismatchDetails(mismatchRow,$scope.getMismatchDetails)},$rootScope.$on("mismatchFilterChange",filterMismatches);var orderByFields={OBSERVED_DATE:"observation.observedDateTime",CONTENT_KEY:"keyString",REFERENCE_DATE:"observation.refDateTime",MISMATCH_TYPE:"mismatch.mismatchType",STATUS:"mismatch.status"}}]),angular.module("open.spotcheck").controller("SpotcheckMismatchCtrl",["$scope","$filter","$routeParams","$rootScope","SpotcheckOpenMismatchAPI","SpotcheckOpenMismatchSummaryAPI","SpotcheckDefaultFilter",function($scope,$filter,$routeParams,$rootScope,OpenMMAPI,OpenMMSummaryAPI,defaultFilter){function getOpenMismatchParams(){var params=angular.merge({},$scope.filter);return params.reportType=$scope.reportType,params.mismatchType=[],angular.forEach(params.types,function(requested,type){requested&&params.mismatchType.push(type)}),delete params.statuses,delete params.types,delete params.passes,delete params.filterFunction,params}$scope.unselectedReportType="unselected",$scope.mismatchRows=[],$scope.summary=null,$scope.filter=angular.copy(defaultFilter),$scope.requestCount=0,$scope.lastReceived=0,$scope.init=function(){$scope.reportType=$routeParams.reportType||$scope.unselectedReportType,$scope.getOpenMismatches()},$rootScope.$on("mismatchFilterChange",function(){console.log("mismatch filter change detected",$scope.filter),$scope.getOpenMismatches()}),$scope.getOpenMismatches=function(){if($scope.parameterError=$scope.requestError=!1,"unselected"!==$scope.reportType){var params=getOpenMismatchParams(),reqId=++$scope.requestCount;console.log("getting open mismatches",params),OpenMMAPI.get(params,function(response){if(reqId>$scope.lastReceived){var summaries=response.summary.summaryMap;$scope.reportType in summaries&&($scope.summary=summaries[$scope.reportType]),$scope.mismatchRows=$scope.extractMismatchRows(response.observations,response.query.refTypes[0]),$scope.lastReceived=reqId,console.log("got it")}},function(response){reqId>$scope.lastReceived&&(console.log("uh oh:",response),$scope.tableData=[],$scope.lastReceived=reqId,400===response.status&&1===response.data.errorCode?($scope.parameterError=!0,$scope.parameterErrorVal=response.data.errorData.parameterConstraint.name,$scope.invalidParamDialog(response)):$scope.requestError=!0)})}}}]),angular.module("open.spotcheck").directive("mismatchView",["$rootScope","$mdDialog","SpotcheckDefaultFilter","SpotcheckMismatchIgnoreAPI","SpotcheckMismatchTrackingAPI","IgnoreStatuses",mismatchViewDirective]).filter("orderByLabel",orderByLabelFilter).filter("statusSelectLabel",["$filter",statusSelectLabelFilter]).filter("typeSelectLabel",["$filter",typeSelectLabelFilter]);var orderByLabels={OBSERVED_DATE:"Observed Date",CONTENT_KEY:"Content Key",REFERENCE_DATE:"Reference Date",MISMATCH_TYPE:"Mismatch Type",STATUS:"Mismatch Status"};angular.module("open.spotcheck").controller("SpotcheckOpenSummaryCtrl",["$scope","$filter","SpotcheckOpenMismatchSummaryAPI",openSummaryCtrl]);var adminModule=angular.module("open.admin",["open.core"]);angular.module("open.admin").controller("DashboardCtrl",["$scope","$routeParams",function($scope,$routeParams){$scope.activeIndex=parseInt($routeParams.view,10)||0,$scope.init=function(){$scope.setHeaderVisible(!0),$scope.setHeaderText("Manage configuration")},$scope.$watch("activeIndex",function(n,o){n!==o&&$routeParams.view!==n&&$scope.setSearchParam("view",$scope.activeIndex)}),$scope.viewMap={environment:0,cache:1,index:2},$scope.init()}]);var adminModule=angular.module("open.admin");adminModule.factory("LogSearchAPI",["$resource",function($resource){return $resource(adminApiPath+"/apiLogs/")}]),adminModule.factory("DataProcessRunsAPI",["$resource",function($resource){return $resource(adminApiPath+"/process/runs/:from/:to")}]),adminModule.factory("DataProcessRunsDetailsAPI",["$resource",function($resource){return $resource(adminApiPath+"/process/runs/id/:id")}]),adminModule.controller("LogsCtrl",["$scope","$routeParams","$timeout","PaginationModel","LogSearchAPI","DataProcessRunsAPI","DataProcessRunsDetailsAPI",function($scope,$routeParams,$timeout,PaginationModel,LogSearchAPI,DataProcessRunsAPI,DataProcessRunsDetailsAPI){$scope.view=parseInt($routeParams.view,10)||0,$scope.$watch("view",function(n,o){n!==o&&$routeParams.view!==n&&$scope.setSearchParam("view",$scope.view)}),$scope.stompClient=null,$scope.now=moment(),$scope.newApiRequestsCount=0,$scope.newApiRequests=[],$scope.connectToSocket=function(){var socket=new SockJS(window.ctxPath+"/sock");$scope.stompClient=Stomp.over(socket),$scope.stompClient.connect({},function(frame){console.log("Connected: "+frame),$scope.now=moment(),$scope.stompClient.subscribe("/event/apiLogs",function(logEvent){$scope.$apply(function(){$scope.newApiRequests.unshift(JSON.parse(logEvent.body)),$scope.newApiRequests.length>2e3&&($scope.newApiRequests=[]),$scope.newApiRequestsCount++})})})},$scope.resetRunningLog=function(){$scope.now=moment(),$scope.newApiRequests=[],$scope.newApiRequestsCount=0},$scope.disconnect=function(){null!=$scope.stompClient&&$scope.stompClient.disconnect()},$scope.apiLogTerm=$routeParams.apiLogTerm||"",$scope.apiLogSort=$routeParams.apiLogSort||"requestTime:desc",$scope.apiLogFromDate=$routeParams.apiLogStart?moment($routeParams.apiLogStart).toDate():moment().subtract("days",1).toDate(),$scope.apiLogToDate=$routeParams.apiLogEnd?moment($routeParams.apiLogEnd).toDate():moment().add("days",1).toDate(),$scope.apiLogSearchPagination=angular.extend({},PaginationModel),$scope.apiLogSearchPagination.currPage=$routeParams.page||1,$scope.apiLogSearchPagination.itemsPerPage=20,$scope.searchLogs=function(){var start=$scope.toZonelessISOString(moment($scope.apiLogFromDate)),end=$scope.toZonelessISOString(moment($scope.apiLogToDate));$scope.setSearchParam("apiLogStart",start),$scope.setSearchParam("apiLogEnd",end),$scope.setSearchParam("apiLogTerm",$scope.apiLogTerm),$scope.setSearchParam("apiLogSort",$scope.apiLogSort);var term="("+($scope.apiLogTerm||"*")+") AND requestTime:["+start+" TO "+end+"]";LogSearchAPI.get({term:term,sort:$scope.apiLogSort,limit:$scope.apiLogSearchPagination.getLimit(),offset:$scope.apiLogSearchPagination.getOffset()},function(resp){resp&&resp.success&&($scope.logSearchResp=resp,$scope.logSearchResults=resp.result.items)})},$scope.apiLogSearchPageChange=function(newPageNumber){$scope.setSearchParam("page",newPageNumber),$scope.searchLogs()},$scope.runsResults=[],$scope.pollPromise=null,$scope.hideEmptyRuns="false"!==$routeParams.hideEmptyRuns,$scope.runsFromDate=$routeParams.runsStart?moment($routeParams.runsStart).toDate():moment().subtract("days",1).toDate(),$scope.runsToDate=$routeParams.runsEnd?moment($routeParams.runsEnd).toDate():moment().add("days",1).toDate(),$scope.runsPagination=angular.extend({},PaginationModel),$scope.runsPagination.currPage=$routeParams.runLogPage||1,$scope.runsPagination.itemsPerPage=20,$scope.getRuns=function(){var fromDate=$scope.toZonelessISOString(moment($scope.runsFromDate)),toDate=$scope.toZonelessISOString(moment($scope.runsToDate));$scope.setSearchParam("hideEmptyRuns",$scope.hideEmptyRuns),$scope.setSearchParam("runsStart",fromDate),$scope.setSearchParam("runsEnd",toDate),DataProcessRunsAPI.get({from:fromDate,to:toDate,full:!$scope.hideEmptyRuns,detail:!0,limit:$scope.runsPagination.getLimit(),offset:$scope.runsPagination.getOffset()},function(resp){$scope.runsResp=resp,resp.success&&($scope.runsResults=resp.result.items)})},$scope.getRunsPolling=function(){$scope.getRuns(),console.log("In runs polling"),$scope.pollPromise=$timeout(function(){$scope.getRunsPolling()},15e3)},$scope.dataProcessLogPageChange=function(newPageNumber){$scope.pollPromise&&$timeout.cancel($scope.pollPromise),$scope.getRunsPolling(),$scope.setSearchParam("runLogPage",newPageNumber)},$scope.init=function(){$scope.setHeaderText("View Logs"),$scope.setHeaderVisible(!0),$scope.connectToSocket(),$scope.searchLogs(),$scope.getRuns()},$scope.init()}]);var adminModule=angular.module("open.admin");adminModule.factory("CacheAPI",["$resource",function($resource){return $resource(adminApiPath+"/cache/:cacheType",{cacheType:"@cacheType"},{update:{method:"PUT"}})}]),adminModule.controller("CacheCtrl",["$scope","$timeout","CacheAPI",function($scope,$timeout,CacheAPI){$scope.caches=[],$scope.loading={},$scope.fetchCaches=function(){$scope.cacheResp=CacheAPI.get({},function(){$scope.cacheResp.success===!0&&($scope.caches=$scope.cacheResp.result.items)})},$scope.evictCache=function(cacheName){CacheAPI["delete"]({cacheType:cacheName},function(resp){console.log(resp),$scope.fetchCaches()})},$scope.warmCache=function(cacheName){$scope.loading[cacheName]=!0,CacheAPI.update({cacheType:cacheName},function(resp){$scope.loading[cacheName]=!1,$scope.fetchCaches()});var poll=function(){$scope.loading[cacheName]===!0&&($scope.fetchCaches(),$timeout(poll,5e3))};poll()},$scope.init=function(){$scope.fetchCaches()}}]);var adminModule=angular.module("open.admin");
adminModule.factory("AccountsAPI",["$resource",function($resource){return $resource(adminApiPath+"/accounts/:username",{username:"@username",master:"@master"})}]),adminModule.factory("PassChangeAPI",["$resource",function($resource){return $resource(adminApiPath+"/accounts/passchange",{password:"@password"})}]),adminModule.controller("AccountSettingsCtrl",["$scope","$routeParams","$location",function($scope,$routeParams,$location){var pageNames=["passchange","notification_subscriptions","manage_users"];$scope.init=function(){if($routeParams.hasOwnProperty("view")){var view=$routeParams.view;if(Number(view))$scope.selectedIndex=Number(view);else{var viewIndex=pageNames.indexOf(view);viewIndex>=0&&($scope.selectedIndex=viewIndex)}}},$scope.$watch("selectedIndex",function(){$scope.selectedIndex>=0&&$scope.selectedIndex<pageNames.length&&$location.search("view",pageNames[$scope.selectedIndex]).replace()}),$scope.init()}]),adminModule.controller("PassChangeCtrl",["$scope","$element","$mdToast","PassChangeAPI",function($scope,$element,$mdToast,PassChangeAPI){$scope.minPassLength=5,$scope.newPass="",$scope.newPassRepeat="",$scope.response=null,$scope.submitNewPass=function(){$scope.newPass.length>=$scope.minPassLength?$scope.response=PassChangeAPI.save({password:$scope.newPass},function(){$scope.showToast("Password Changed"),$scope.newPass="",$scope.newPassRepeat=""},function(errorResponse){1===errorResponse.data.errorCode?$scope.showToast(errorResponse.data.errorData.parameterConstraint):$scope.showToast(errorResponse.data.message)}):$scope.newPass===$scope.newPassRepeat?$scope.showToast("Password too short!"):$scope.showToast("Passwords must match!")},$scope.showToast=function(content){return $mdToast.show($mdToast.simple().position("right").content(content))}}]),adminModule.controller("ManageAdminUsersCtrl",["$scope","$mdToast","$mdDialog","AccountsAPI",function($scope,$mdToast,$mdDialog,AccountsApi){$scope.accounts=[];var blankAccount={username:"",master:!1};$scope.newAccount=blankAccount,$scope.newAccountShown=!1,$scope.init=function(){$scope.getAccounts()},$scope.getAccounts=function(){$scope.loadingAccounts=!0,AccountsApi.get({username:""},function(response){$scope.accounts=response.result.items,$scope.loadingAccounts=!1})},$scope.createAccount=function(){$scope.creatingAccount=!0,AccountsApi.save($scope.newAccount,function(){$scope.creatingAccount=!1,$scope.getAccounts(),$scope.newAccount=blankAccount,$scope.newAccountShown=!1},function(errorResponse){$scope.creatingAccount=!1,1!==errorResponse.data.errorCode&&errorResponse.data.errorCode?$scope.errorToast(errorResponse.data.message):$scope.errorToast("Invalid username: must be @nysenate.gov email address")})},$scope.removeAccount=function(username){$scope.removingAccount=!0,AccountsApi["delete"]({username:username},function(response){$scope.removingAccount=!1,$scope.getAccounts()},function(errorResponse){$scope.removingAccount=!1,console.log("err0r removing",username),$scope.errorToast(errorResponse.data.message)})},$scope.errorToast=function(text){$mdToast.show({template:"<md-toast>"+text+"</md-toast>",parent:angular.element("#admin-management"),position:"fit left"})},$scope.deletePrompt=function(username){$mdDialog.show($mdDialog.confirm().title("Confirm Admin Removal").content("Delete admin account "+username+"?").ok("Yes!").cancel("Never Mind")).then(function(){$scope.removeAccount(username)})}}]);var adminModule=angular.module("open.admin");adminModule.factory("GetNotifSubsApi",["$resource",function($resource){return $resource(adminApiPath+"/notifications/subscriptions")}]),adminModule.factory("SubscribeToNotifApi",["$resource",function($resource){return $resource(adminApiPath+"/notifications/subscribe",{type:"@type",target:"@target",address:"@address"})}]),adminModule.factory("UnsubscribeToNotifApi",["$resource",function($resource){return $resource(adminApiPath+"/notifications/unsubscribe",{type:"@type",target:"@target",address:"@address"})}]),adminModule.controller("NotificationSubCtrl",["$scope","$timeout","$q","GetNotifSubsApi","SubscribeToNotifApi","UnsubscribeToNotifApi",function($scope,$timeout,$q,getSubsApi,subscribeApi,unSubscribeApi){function getNotificationTypes(hierarchyMap,depth){for(var typeList=[],indent="",i=0;depth>i;i++)indent+="  ";for(var type in hierarchyMap)hierarchyMap.hasOwnProperty(type)&&(typeList.push(indent+type),typeList=typeList.concat(getNotificationTypes(hierarchyMap[type],depth+1)));return typeList}function modifyAllSelections(selected){angular.forEach($scope.subscriptions,function(subscription){subscription.selected=selected})}function startsWithFilter(searchTerm){if(searchTerm)var searchTermUpper=searchTerm.toUpperCase();else var searchTermUpper="";return function(str){return str.slice(0,searchTerm.length)==searchTermUpper}}$scope.subscriptions=[];var cleanSubscription={type:"",target:"",address:""};$scope.newSubscription=Object.create(cleanSubscription),$scope.newSubscriptionShown=!1,$scope.selectAll=!1,$scope.selectedSubs=0,$scope.init=function(typeHierarchy,targets){$scope.notificationTypes=getNotificationTypes(typeHierarchy,0),console.log($scope.notificationTypes),$scope.notificationTargets=targets,$scope.getSubscriptions()},$scope.getSubscriptions=function(){var response=null;response=getSubsApi.get({},function(){response.success&&($scope.subscriptions=response.result.items,$scope.selectAll=!1,$scope.selectedSubs=0)})},$scope.registerNewSubscription=function(){var response=null;response=subscribeApi.get($scope.newSubscription,function(){response.success&&($scope.newSubscription=Object.create(cleanSubscription),$scope.getSubscriptions(),$scope.hideNewSubscription())})},$scope.unsubscribeSelected=function(){$q.all(getSelectedSubs().map(function(sub){return unSubscribeApi.get(sub).$promise})).then($scope.getSubscriptions)};var getSelectedSubs=function(){return $scope.subscriptions.filter(function(sub){return sub.selected})};$scope.tallySelectedSubs=function(){$timeout(function(){$scope.selectedSubs=getSelectedSubs().length,$scope.selectedSubs<$scope.subscriptions.length&&($scope.selectAll=!1)},0)},$scope.applySelectAll=function(){$timeout(function(){modifyAllSelections($scope.selectAll),$scope.tallySelectedSubs()},0)},$scope.searchForNotificationType=function(searchTerm){return $scope.notificationTypes.filter(startsWithFilter(searchTerm))},$scope.searchForNotificationTarget=function(searchTerm){return searchTerm?$scope.notificationTargets.filter(startsWithFilter(searchTerm)):[]}}]);var adminModule=angular.module("open.admin");adminModule.factory("EnvironmentAPI",["$resource",function($resource){return $resource(adminApiPath+"/environment")}]),adminModule.factory("SetEnvironmentAPI",["$resource",function($resource){return $resource(adminApiPath+"/environment/set")}]),adminModule.controller("EnvironmentCtrl",["$scope","EnvironmentAPI","SetEnvironmentAPI",function($scope,EnvApi,SetEnvApi){$scope.vars=[],$scope.requestedVars=[],$scope.init=function(){$scope.getVariables()},$scope.getVariables=function(){$scope.loading=!0,EnvApi.get({varName:$scope.requestedVars},function(response){$scope.error=$scope.loading=!1,$scope.vars=response.result.items},function(){$scope.loading=!1,$scope.error=!0})},$scope.setVariable=function(varName){var variable=$scope.getVar(varName);null!=variable&&(console.log("setting",varName,"to",variable.newValue),variable.setting=!0,SetEnvApi.get({varName:variable.name,value:variable.newValue},function(){variable.setting=variable.error=!1,variable.value=variable.newValue},function(){variable.newValue=variable.value,variable.setting=!1,variable.error=!0}))},$scope.getVar=function(varName){for(var i in $scope.vars)if($scope.vars[i].name===varName)return $scope.vars[i];return null}}]);